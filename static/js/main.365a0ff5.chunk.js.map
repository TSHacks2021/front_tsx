{"version":3,"sources":["Time/DisplayTime.tsx","Time/SettingContents.tsx","Time/SettingModal.tsx","Time/TimeBar.tsx","WindowDimensions.tsx","Time/Time.tsx","Memo/MemoArea.tsx","Memo/Tabs/TabTitle.tsx","Memo/Tabs/Tabs.tsx","Memo/Tabs/Tab.tsx","Memo/Tabs/Chat/AlignItemsList.tsx","Memo/Tabs/Chat/SendButton.tsx","Memo/Tabs/Chat/TextInput.tsx","Memo/Tabs/Chat/ChatArea.tsx","Memo/PresenterTab.tsx","Memo/Memo.tsx","TimeInfo.tsx","WebSocket.tsx","reportWebVitals.ts","index.tsx"],"names":["presentersIntervalId","DisplayTime","props","expiryTimestamp","useTimer","onExpire","console","warn","seconds","minutes","hours","pause","days","isRunning","start","restart","resume","useState","presentTime","setPresentTime","Date","startDate","setStartDate","setEndDate","timeInfo","getPresenters","presenters","setPresenters","clearInterval","setInterval","useEffect","getNowPresenterIndex","update","log","changePresenter","remain","presentTime_","now","Math","floor","getTime","toNextPresenter","startDate_","endDate_","getNowPresentDate","className","style","fontSize","slice","onClick","getNumPresenters","sendChangePresenter","SettingContents","getStartTime","getHours","startHour","setStartHour","getMinutes","startMin","setStartMin","getEndTime","endHour","setEndHour","endMin","setEndMin","numPresenters","setNumPresenters","getPresentTime","getBreakTime","breakTime","setBreakTime","hundleDeletePresenter","idx","deletePresenter","hundleAddPresenter","break_","addPresenter","handlePresenterName","e","name","target","value","Number","split","presenters_copy","type","onChange","map","h","min","startTime","setHours","setMinutes","setStartTime","endTime","setEndTime","max","n","presenter","disabled","time","Modal","setAppElement","SettingModal","React","modalIsOpen","setIsOpen","isOpen","sendTimeInfo","vertical_bar_y_mag","timetext_y_mag","nametext_y_mag","colors","checksetStartTime","checksetEndTime","checksetPresenters","checkdraw","secTohourmin","hour","String","hourminsecTosec","timestrs","draw","context","canvasRef","width","height","starttime","endtime","names","times","startposition","endposition","nowtime_bar_x_diff","font_little","font_big","font_min","bar_y_position","current","clearRect","barposition","sum","Array","length","timelength","barlength","i","j","calcBarPosition","globalAlpha","strokeStyle","textAlign","beginPath","moveTo","lineTo","stroke","font","fillText","timestr","toLocaleTimeString","hour12","minute","second","nowtimeposition","calcNowtimePosition","TimeBar","setContext","windowdimensions","getWindowDimensions","window","innerWidth","innerHeight","windowDimensions","setWindowDimensions","onResize","addEventListener","removeEventListener","useWindowDimensions","push","position","left","top","renderCtx","getContext","id","ref","border","marginTop","Time","dummypresenters","TabTitle","title","setSelectedTab","index","isSelected","useCallback","Tabs","children","selectedTab","item","Tab","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","inline","display","AlignItemsList","chats","classes","overflow","List","ListItem","alignItems","ListItemText","primary","button","margin","spacing","leftIcon","marginRight","iconSmall","SendButton","Button","variant","color","onSendButtonClick","Icon","TextInput","handleSendButtonClick","chatfield","document","getElementById","namefield","onButtonClick","Fragment","noValidate","autoComplete","onSubmit","preventDefault","handleSubmit","TextField","label","onKeyPress","key","ChatArea","message","PresenterTab","memo","placeholder","onMemoChange","savedummypresenters","checksetMessage","MemoArea","presenterNum","getChatMessage","newMessage","setNewMessage","newPresenters","p","presentername","sendmessage","mes_json","JSON","stringify","socket","emit","sendMessage","presenterTabs","handleMemoChange","Memo","TimeInfo","this","fill","nowPresenterIndex","chatMessage","to","sender","num","setSeconds","getSeconds","concat","splice","prevTime","sec","nowPresenterStartDate","nowPresenterEndDate","presenterlist","timesetting","getPresenterList","getTimeSetting","setPresenterList","presenttime","breaktime","setNowPresenterIndex","nextpresenter","setTimeSetting","Socket","ws","ee","EventEmitter","onmessage","bind","onopen","open","onclose","close","onerror","error","fn","on","removeListener","data","send","err","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WebSocket","parse","setChatMessage","messagetype","receiveTimeInfo","receiveChangePresenter","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.365a0ff5.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./DisplayTime.css\"\r\nimport { useTimer } from \"react-timer-hook\"; //npm install react-timer-hook が必要\r\nimport { TimeInfo } from \"../TimeInfo\";\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\nvar presentersIntervalId: any = null;\r\n\r\nfunction DisplayTime( props: Props, { expiryTimestamp }: { expiryTimestamp: number } ) {\r\n\r\n  const {\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    days,\r\n    isRunning,\r\n    start,\r\n    pause,\r\n    resume,\r\n    restart,\r\n  } = useTimer({\r\n    expiryTimestamp,\r\n    onExpire: () => console.warn(\"onExpire called\"),\r\n  });\r\n\r\n  const [presentTime, setPresentTime] = useState(0);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  const [presenters, setPresenters] = useState(props.timeInfo.getPresenters());\r\n  if(presentersIntervalId) clearInterval(presentersIntervalId);\r\n  presentersIntervalId = setInterval(function(){setPresenters(props.timeInfo.getPresenters())}, 100)\r\n\r\n  useEffect(()=>{\r\n    // タイマーをセットする部分\r\n    // endDate.setSeconds(startDate.getSeconds() + presentTime);\r\n    // restart(endDate as unknown as number);\r\n    if(props.timeInfo.getNowPresenterIndex() >= 0){\r\n      update();\r\n    }\r\n    console.log(\"Display|useEffect\");\r\n  }, [presenters])\r\n\r\n\r\n  const handleClick = () =>{\r\n    if(props.timeInfo.getNowPresenterIndex() < props.timeInfo.getNumPresenters()-1){\r\n      // 次の発表者がいる場合\r\n      changePresenter();\r\n    }\r\n\r\n    props.timeInfo.sendChangePresenter();\r\n  }\r\n\r\n  const changePresenter = () =>{\r\n    pause();\r\n    //今の発表者が発表した時間を計算\r\n    const remain = hours*3600 + minutes*60 + seconds;\r\n    var presentTime_ = presentTime;\r\n    if(remain > 0){\r\n      // 早く終わったとき\r\n      presentTime_ = (presentTime - remain);\r\n    }else{\r\n      // 時間オーバーしたとき\r\n      const now = new Date();\r\n      presentTime_ = Math.floor((now.getTime() - startDate.getTime()) /1000);\r\n    }\r\n\r\n    // タイマーをリスタート\r\n    const [startDate_, endDate_] = props.timeInfo.toNextPresenter(presentTime_);\r\n    presentTime_ = Math.floor((endDate_.getTime() - startDate_.getTime()) /1000);\r\n    restart(endDate_ as unknown as number);\r\n\r\n    setPresentTime(presentTime_);\r\n    setStartDate(startDate_);\r\n    setEndDate(endDate_);\r\n  }\r\n\r\n  const update = () => {\r\n    // 現在の発表者の開始時刻，終了時刻を受け取り，タイマーをリスタートする\r\n    const [startDate_, endDate_] = props.timeInfo.getNowPresentDate();\r\n    const presentTime_ = Math.floor((endDate_.getTime() - startDate_.getTime()) /1000);\r\n\r\n    restart(endDate_ as unknown as number);\r\n\r\n    setPresentTime(presentTime_);\r\n    setStartDate(startDate_);\r\n    setEndDate(endDate_);\r\n  }\r\n\r\n\r\n  return (\r\n    <div /*style={{ textAlign: \"center\" }}*/ className=\"flex\">\r\n      <div style={{ fontSize: \"500%\" }}>\r\n        <span>{( '00' + minutes ).slice( -2 )}</span>:<span>{( '00' + seconds ).slice( -2 )}</span>\r\n      </div>\r\n      <button className=\"button\" onClick={handleClick}>  切替  </button>\r\n      {/* <button className=\"button\" onClick={update}>  更新  </button> */}\r\n    </div>\r\n  );  \r\n\r\n}\r\n\r\nexport default DisplayTime;","import React, { useEffect, useState } from \"react\";\r\nimport { TimeInfo } from \"../TimeInfo\";\r\nimport \"./SettingContents.css\";\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\n\r\nfunction SettingContents(props: Props) {\r\n\r\n  const [startHour, setStartHour] = useState(props.timeInfo.getStartTime().getHours());\r\n  const [startMin, setStartMin] = useState(props.timeInfo.getStartTime().getMinutes());\r\n  const [endHour, setEndHour] = useState(props.timeInfo.getEndTime().getHours());\r\n  const [endMin, setEndMin] = useState(props.timeInfo.getEndTime().getMinutes());\r\n  const [numPresenters, setNumPresenters] = useState(props.timeInfo.getNumPresenters());\r\n  const [presenters, setPresenters] = useState(props.timeInfo.getPresenters());\r\n  const [presentTime, setPresentTime] = useState(props.timeInfo.getPresentTime());\r\n  const [breakTime, setBreakTime] = useState(props.timeInfo.getBreakTime());\r\n\r\n  // useEffect(()=>{\r\n  //   setStartHour(props.timeInfo.getStartTime().getHours());\r\n  //   setStartMin(props.timeInfo.getStartTime().getMinutes());\r\n  //   setEndHour(props.timeInfo.getEndTime().getHours());\r\n  //   setEndMin(props.timeInfo.getEndTime().getMinutes());\r\n  //   setNumPresenters(props.timeInfo.getNumPresenters());\r\n  //   console.log('useEffect')\r\n  // }, [])\r\n\r\n  const handleStartTime = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    var [h, min] = e.target.value.split(':').map(Number);\r\n\r\n    //propsの更新\r\n    var startTime = new Date();\r\n    startTime.setHours(h);\r\n    startTime.setMinutes(min);\r\n    props.timeInfo.setStartTime(startTime); \r\n\r\n    setStartHour(h);\r\n    setStartMin(min);\r\n  }\r\n\r\n  const handleEndTime = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    var [h, min] = e.target.value.split(':').map(Number);\r\n\r\n    //propsの更新\r\n    var endTime = new Date();\r\n    endTime.setHours(h);\r\n    endTime.setMinutes(min);\r\n    props.timeInfo.setEndTime(endTime); \r\n\r\n    setEndHour(h);\r\n    setEndMin(min);\r\n  }\r\n\r\n  const handleNumPresenters = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    var n = Number(e.target.value);\r\n    props.timeInfo.setNumPresenters(n);\r\n\r\n    setNumPresenters(props.timeInfo.getNumPresenters());\r\n    setPresenters(props.timeInfo.getPresenters());\r\n  }\r\n\r\n\r\n  const hundleDeletePresenter = (idx:number) => {\r\n    if(numPresenters > 1){\r\n      props.timeInfo.deletePresenter(idx);\r\n\r\n      setPresenters(props.timeInfo.getPresenters());\r\n      setNumPresenters(props.timeInfo.getNumPresenters());\r\n    }\r\n  }\r\n\r\n  const hundleAddPresenter = (idx: number, break_: boolean) => {\r\n    if(!break_){\r\n      props.timeInfo.addPresenter(idx+1, \"\", 20*60);\r\n    }else{\r\n      props.timeInfo.addPresenter(idx+1, \"break\", 10*60);\r\n    }\r\n\r\n    setPresenters(props.timeInfo.getPresenters());\r\n    setNumPresenters(props.timeInfo.getNumPresenters());\r\n  }\r\n\r\n  const handlePresenterName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    var name = e.target.value;\r\n    var idx = Number(e.target.name.split('_')[1]);\r\n    var presenters_copy = presenters.slice();\r\n    presenters_copy[idx]['name'] = name;\r\n    props.timeInfo.setPresenters(presenters_copy);\r\n\r\n    setPresenters(props.timeInfo.getPresenters());\r\n  }\r\n\r\n  const handlePresentTime = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    var time = Number(e.target.value);\r\n    props.timeInfo.setPresentTime(time);\r\n\r\n    setPresenters(props.timeInfo.getPresenters());\r\n    setPresentTime(props.timeInfo.getPresentTime());\r\n  }\r\n\r\n  const handleBreakTime = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    var time = Number(e.target.value);\r\n    props.timeInfo.setBreakTime(time);\r\n\r\n    setPresenters(props.timeInfo.getPresenters());\r\n    setBreakTime(props.timeInfo.getBreakTime());\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n      <p>設定項目</p>\r\n      <p>開始時間</p>\r\n      <input type=\"time\" name=\"startTime\" value={( '00' + startHour ).slice( -2 )+':'+( '00' + startMin ).slice( -2 )} onChange={handleStartTime}></input>\r\n      <p>終了時間</p>\r\n      <input type=\"time\" name=\"endTime\" value={( '00' + endHour ).slice( -2 )+':'+( '00' + endMin ).slice( -2 )} onChange={handleEndTime}></input>\r\n      <p>発表人数{numPresenters}人</p>\r\n      <input type=\"number\" name=\"numPresenters\" value={numPresenters} min=\"1\" max=\"20\" onChange={handleNumPresenters}></input>\r\n      {/* <button onClick={()=>{\r\n        props.timeInfo.addNumPresenters(1);\r\n        setNumPresenters(props.timeInfo.getNumPresenters());\r\n        setPresenters(props.timeInfo.getPresenters());\r\n      }}>人数+</button> */}\r\n      <p>発表者</p>\r\n      <div className=\"presenter\"> \r\n        {\r\n          presenters.map((presenter, idx) => {\r\n            if (presenter['name'] === 'break'){ //休憩部分は名前を変えられないように\r\n              return (\r\n                <div className=\"flex\">\r\n                  <button className=\"namebutton\" onClick={() => hundleDeletePresenter(idx)}>x</button>\r\n                  <input type=\"text\" name={\"presenter_\"+(idx)} value={presenter['name']} onChange={handlePresenterName} disabled></input>\r\n                  <button className=\"namebutton\" onClick={() => hundleAddPresenter(idx, false)}>+発表者</button>\r\n                </div>\r\n              )\r\n            }else{\r\n              return (\r\n                <div className=\"flex\">\r\n                  <button className=\"namebutton\" onClick={() => hundleDeletePresenter(idx)}>x</button>\r\n                  <input type=\"text\" name={\"presenter_\"+(idx)} value={presenter['name']} onChange={handlePresenterName}></input>\r\n                  <button className=\"namebutton\" onClick={() => hundleAddPresenter(idx, false)}>+発表者</button>\r\n                  <button className=\"namebutton\" onClick={() => hundleAddPresenter(idx, true)}>+休憩</button>\r\n                </div>\r\n              )\r\n            }\r\n            \r\n          })\r\n        }\r\n        \r\n      </div>\r\n      {/* <button onClick={()=>{\r\n        console.log('CLONE')\r\n        var node = document.getElementsByClassName(\"input\")[0];\r\n        node?.after(node.cloneNode());\r\n      }}>CLONE</button>\r\n      <button onClick={()=>{\r\n        console.log('DELETE')\r\n        var nodes = document.getElementsByClassName(\"input\");\r\n        var node = nodes[nodes.length-1]\r\n        node.remove();\r\n      }}>DELETE</button> */}\r\n      <div>\r\n        <p>各発表時間</p>\r\n        <input type=\"number\" value={presentTime} onChange={handlePresentTime}></input>\r\n      </div>\r\n      <div>\r\n        <p>休憩時間</p>\r\n        <input type=\"number\" value={breakTime} onChange={handleBreakTime}></input>\r\n      </div>\r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingContents;","import React, { useEffect } from \"react\";\r\nimport SettingContents from \"./SettingContents\";\r\nimport { TimeInfo } from \"../TimeInfo\";\r\nimport Modal from \"react-modal\"; //npm install --save react-modal @types/react-modal でインストール\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\nfunction SettingModal(props: Props){\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={()=>{\r\n          setIsOpen(true)\r\n        }}  \r\n      >\r\n        設定\r\n      </button>\r\n      <Modal isOpen={modalIsOpen}>\r\n        <button\r\n          onClick={()=>{\r\n            setIsOpen(false)\r\n          }}  \r\n        >\r\n          閉じる\r\n        </button>\r\n        <SettingContents \r\n          timeInfo={props.timeInfo}\r\n        />\r\n        <button\r\n          onClick={()=>{\r\n            setIsOpen(false)\r\n            props.timeInfo.sendTimeInfo();\r\n          }}  \r\n        >\r\n          送信\r\n        </button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingModal;","import * as React from 'react';\r\nimport { TimeInfo } from \"../TimeInfo\";\r\nimport { useWindowDimensions } from \"../WindowDimensions\";\r\n\r\nconst canvas_left_mag = 0.182;\r\nconst canvas_right_mag = 0.625;\r\nconst canvas_bottom_mag = 0.097;\r\nconst startposition_mag = 0.026;\r\nconst endposition_mag = 0.599;\r\nconst nowtime_bar_x_diff_mag = 0.013;\r\nconst vertical_bar_y_mag = 0.02;\r\nconst nowtime_bar_y_mag = 0.015;\r\nvar time:Date;\r\nconst bar_y_position_mag = 0.045;\r\nconst timetext_y_mag = 0.048;\r\nconst nametext_y_mag = 0.015;\r\nconst nowtimetext_y_position_mag = 0.032;\r\nconst font_size_little_mag = 0.0162;\r\nconst font_size_big_mag = 0.0195;\r\nconst font_size_min_mag = 0.013;\r\nconst colors:string[] = ['red', 'blue', 'black', 'green', 'orange'];\r\nvar checksetStartTime:any = null;\r\nvar checksetEndTime:any = null;\r\nvar checksetPresenters:any = null;\r\nvar checkdraw:any = null;\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\nfunction calcBarPosition(starttime:number, endtime:number, times:number[], startposition:number, endposition:number) {\r\n  var barposition:number[] = new Array(times.length - 1);\r\n  var timelength = endtime - starttime;\r\n  var barlength = endposition - startposition;\r\n  var sum;\r\n\r\n  for (var i = 0; i < times.length - 1; i++) {\r\n    sum = 0;\r\n    for (var j = 0; j <= i; j++) {\r\n      sum += times[j];\r\n    }\r\n    barposition[i] = startposition + (barlength * (sum / timelength));\r\n  }\r\n\r\n  return barposition;\r\n}\r\n\r\nfunction calcNowtimePosition(timestr:string, starttime:number, endtime:number, startposition:number, endposition:number) {\r\n  var timelength = endtime - starttime;\r\n  var barlength = endposition - startposition;\r\n  var second = hourminsecTosec(timestr);\r\n\r\n  return (startposition + (barlength * ((second - starttime) / timelength)));\r\n}\r\n\r\nfunction secTohourmin(seconds:number) {\r\n  var hour:number = Math.floor(seconds / 3600);\r\n  var min:number = Math.floor((seconds - (hour * 3600)) / 60);\r\n  var hourstr:string;\r\n  var minstr:string;\r\n\r\n  if (hour < 10) {\r\n    hourstr = '0' + String(hour);\r\n  }\r\n  else {\r\n    hourstr = String(hour);\r\n  }\r\n  if (min < 10) {\r\n    minstr = '0' + String(min);\r\n  }\r\n  else {\r\n    minstr = String(min);\r\n  }\r\n\r\n  return (hourstr + ':' + minstr);\r\n}\r\n\r\nfunction hourminsecTosec(time:string) {\r\n  var timestrs = time.split(':');\r\n  var hour:number = Number(timestrs[0]);\r\n  var min:number = Number(timestrs[1]);\r\n  var second:number = Number(timestrs[2]);\r\n\r\n  return ((hour * 3600) + (min * 60) + second);\r\n}\r\n\r\nfunction draw(context:any, canvasRef:any, width:number, height:number, starttime:number, endtime:number, names:string[], times:number[]) {\r\n  var startposition = startposition_mag * width;\r\n  var endposition = endposition_mag * width;\r\n  var nowtime_bar_x_diff = nowtime_bar_x_diff_mag * width;\r\n  var font_little = String(font_size_little_mag * width) + 'px serif';\r\n  var font_big = String(font_size_big_mag * width) + 'px serif';\r\n  var font_min = String(font_size_min_mag * width) + 'px serif';\r\n  var bar_y_position = bar_y_position_mag * width;\r\n  time = new Date();\r\n  if (context) {\r\n    if (canvasRef.current) context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    var barposition = calcBarPosition(starttime, endtime, times, startposition, endposition);\r\n    context.globalAlpha = 1.0;\r\n    context.strokeStyle = 'black';\r\n    context.textAlign = 'center';\r\n    // begin time\r\n    context.beginPath();\r\n    context.moveTo(startposition, bar_y_position - (vertical_bar_y_mag * width));\r\n    context.lineTo(startposition, bar_y_position + (vertical_bar_y_mag * width));\r\n    context.stroke();\r\n    context.font = font_little;\r\n    context.fillText(names[0], (startposition + barposition[0]) / 2, bar_y_position - (nametext_y_mag * width));\r\n    context.font = font_big;\r\n    context.fillText(secTohourmin(starttime), startposition, bar_y_position + (timetext_y_mag * width));\r\n  \r\n    // end time\r\n    context.beginPath();\r\n    context.moveTo(endposition, bar_y_position - (vertical_bar_y_mag * width));\r\n    context.lineTo(endposition, bar_y_position + (vertical_bar_y_mag * width));\r\n    context.stroke();\r\n    context.font = font_little;\r\n    context.fillText(names[names.length - 1], (barposition[barposition.length - 1] + endposition) / 2, bar_y_position - (nametext_y_mag * width));\r\n    context.font = font_big;\r\n    context.fillText(secTohourmin(endtime), endposition, bar_y_position + (timetext_y_mag * width));\r\n  \r\n    // change time\r\n    for (var i = 0; i < barposition.length + 1; i++) {\r\n      context.strokeStyle = 'black';\r\n      context.beginPath();\r\n      context.moveTo(barposition[i], bar_y_position - (vertical_bar_y_mag * width));\r\n      context.lineTo(barposition[i], bar_y_position + (vertical_bar_y_mag * width));\r\n      context.stroke();\r\n      context.strokeStyle = colors[i];\r\n      context.beginPath();\r\n      if (i == 0) {\r\n        context.moveTo(startposition, bar_y_position);\r\n      }\r\n      else {\r\n        context.moveTo(barposition[i - 1], bar_y_position);\r\n      }\r\n      if (i < barposition.length - 1) {\r\n        context.lineTo(barposition[i], bar_y_position);\r\n      }\r\n      else {\r\n        context.lineTo(endposition, bar_y_position);\r\n      }\r\n      context.stroke();\r\n      if (i < barposition.length) {\r\n        var sum = 0;\r\n        for (var j = 0; j <= i; j++) sum += times[j];\r\n        if (i > 0) {\r\n          context.font = font_little;\r\n          context.fillText(names[i], (barposition[i - 1] + barposition[i]) / 2, bar_y_position - (nametext_y_mag * width));\r\n        }\r\n        context.font = font_big;\r\n        context.fillText(secTohourmin(starttime + sum), barposition[i], bar_y_position + (timetext_y_mag * width));\r\n      }\r\n    }\r\n  \r\n    // now time\r\n    var timestr = time.toLocaleTimeString([], {hour12:false, hour:'2-digit', minute:'2-digit', second:'2-digit'});\r\n    var nowtimeposition = calcNowtimePosition(timestr, starttime, endtime, startposition, endposition);\r\n    context.strokeStyle = 'black';\r\n    context.beginPath();\r\n    context.moveTo(nowtimeposition - nowtime_bar_x_diff, bar_y_position - (nowtime_bar_y_mag * width));\r\n    context.lineTo(nowtimeposition, bar_y_position);\r\n    context.stroke();\r\n    context.beginPath();\r\n    context.moveTo(nowtimeposition - nowtime_bar_x_diff, bar_y_position + (nowtime_bar_y_mag * width));\r\n    context.lineTo(nowtimeposition, bar_y_position);\r\n    context.stroke();\r\n    context.font = font_min;\r\n    context.fillText(timestr, nowtimeposition, bar_y_position + (nowtimetext_y_position_mag * width));\r\n  }\r\n}\r\n\r\nfunction TimeBar(props: Props) {\r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(null);\r\n  const [startTime, setStartTime] = React.useState(props.timeInfo.getStartTime());\r\n  const [endTime, setEndTime] = React.useState(props.timeInfo.getEndTime());\r\n  const [presenters, setPresenters] = React.useState(props.timeInfo.getPresenters());\r\n  const windowdimensions = useWindowDimensions();\r\n  var starttime:number;\r\n  var endtime:number;\r\n  var names:string[] = [];\r\n  var times:number[] = [];\r\n  var width:number = windowdimensions.width;\r\n  var height:number = windowdimensions.height;\r\n\r\n  if (checksetStartTime) clearInterval(checksetStartTime);\r\n  checksetStartTime = setInterval(function(){setStartTime(props.timeInfo.getStartTime())}, 100);\r\n  starttime = hourminsecTosec(startTime.toLocaleTimeString([], {hour12:false, hour:'2-digit', minute:'2-digit', second:'2-digit'}));\r\n\r\n  if (checksetEndTime) clearInterval(checksetEndTime);\r\n  checksetEndTime = setInterval(function(){setEndTime(props.timeInfo.getEndTime())}, 100);\r\n  endtime = hourminsecTosec(endTime.toLocaleTimeString([], {hour12:false, hour:'2-digit', minute:'2-digit', second:'2-digit'}));\r\n\r\n  if (checksetPresenters) clearInterval(checksetPresenters);\r\n  checksetPresenters = setInterval(function(){setPresenters(props.timeInfo.getPresenters())}, 100);\r\n\r\n  for (var i = 0; i < presenters.length; i++) {\r\n    names.push(presenters[i].name);\r\n    times.push(presenters[i].time);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      canvasRef.current.style.position = 'absolute';\r\n      canvasRef.current.style.left = String(canvas_left_mag * width) + 'px';\r\n      canvasRef.current.style.top = '10px';\r\n      if (checkdraw) clearInterval(checkdraw);\r\n      checkdraw = setInterval(function(){draw(context, canvasRef, width, height, starttime, endtime, names, times)}, 10);\r\n      const renderCtx = canvasRef.current.getContext('2d');\r\n\r\n      if (renderCtx) {\r\n        setContext(renderCtx);\r\n      }\r\n    }\r\n    draw(context, canvasRef, width, height, starttime, endtime, names, times);\r\n  }, [context, startTime, endTime, presenters, windowdimensions]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n      }}>\r\n      <canvas\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        width={canvas_right_mag * width}\r\n        height={canvas_bottom_mag * width}\r\n        style={{\r\n          border: '2px solid #000',\r\n          marginTop: 10,\r\n        }}\r\n      ></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeBar;","import { useState, useEffect } from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './App'\r\n \r\nexport const useWindowDimensions = () => {\r\n \r\n  const getWindowDimensions = () => {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n      width,\r\n      height\r\n    };\r\n  }\r\n \r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n  useEffect(() => {\r\n    const onResize = () => {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n    window.addEventListener('resize', onResize);\r\n    return () => window.removeEventListener('resize', onResize);\r\n  }, []);\r\n  return windowDimensions;\r\n}","import { render } from '@testing-library/react';\r\nimport { time } from 'console';\r\nimport * as React from 'react';\r\n\r\nimport DisplayTime from './DisplayTime';\r\nimport SettingModal from './SettingModal';\r\n\r\nimport TimeBar from './TimeBar';\r\n\r\n\r\nimport { TimeInfo } from '../TimeInfo';\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\nfunction Time(props: Props) {\r\n  \r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      const renderCtx = canvasRef.current.getContext('2d');\r\n\r\n      if (renderCtx) {\r\n        setContext(renderCtx);\r\n      }\r\n    }\r\n\r\n    // if (context) context.fillRect(5, 5, 100, 100);\r\n  }, [context]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      <canvas\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        width={1000}\r\n        height={300}\r\n        style={{\r\n          border: '2px solid #000',\r\n          marginTop: 10,\r\n        }}\r\n      ></canvas>\r\n      <TimeBar timeInfo={props.timeInfo}/>\r\n      <DisplayTime \r\n        timeInfo={props.timeInfo}\r\n      />\r\n      <SettingModal \r\n        timeInfo={props.timeInfo}\r\n      />\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Time;","import React, {useState} from \"react\";\r\nimport Tabs from \"./Tabs/Tabs\"\r\nimport Tab from \"./Tabs/Tab\"\r\nimport Memo from \"./Memo\";\r\nimport { TodayPresenter } from \"./TodayPresenter\";\r\nimport PresenterTab from \"./PresenterTab\"\r\n\r\nimport {TimeInfo} from \"../TimeInfo\";\r\nimport Socket from '../WebSocket'\r\nimport { receiveMessageOnPort } from \"worker_threads\";\r\n\r\n//function SampleMemo() {\r\n\r\nconst dummyPresenters: TodayPresenter[] = [\r\n    {\r\n        id: 1,\r\n        name: \"A\",\r\n        memo: \"\",\r\n        chats: [\"こんにちは！a\", \"aさん\", \"遊びましょう！\", \"今度また～\"],\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"B\",\r\n        memo: \"\",\r\n        chats: [\"こんにちは！b\"],\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"C\",\r\n        memo: \"\",\r\n        chats: [\"\"],\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"D\",\r\n        memo: \"\",\r\n        chats: [\"\"],\r\n    },\r\n];\r\n\r\ntype MemoAreaProps = {\r\n    presenters: string[];\r\n    presenterNum: number;\r\n    socket: Socket;\r\n    timeInfo: TimeInfo;\r\n}\r\nvar dummypresenters: TodayPresenter[]\r\nvar savedummypresenters: TodayPresenter[] = new Array(0)\r\nvar checksetMessage: any = null\r\n\r\nconst sendMessage = (props: MemoAreaProps, presentername: string, sendmessage: string) => {\r\n    var message = {\"messagetype\":\"memo\", \"presentername\": presentername, \"message\": sendmessage};\r\n    //var message = {\"messagetype\":\"memo\", \"message\": sendmessage};\r\n    //var message = {\"messagetype\":\"message\"};\r\n    var mes_json = JSON.stringify(message);\r\n    console.log(mes_json);\r\n    props.socket.emit(mes_json);\r\n}\r\n\r\nconst MemoArea = (props: MemoAreaProps) => {\r\n    //const[presenters, setPresenters] = useState(dummyPresenters);\r\n    dummypresenters = savedummypresenters.slice()\r\n    if (savedummypresenters.length == 0) {\r\n        for(var i = 0; i < props.presenterNum;i++) {\r\n            dummypresenters[i] = {id:i,name:props.presenters[i],memo:\"\",chats:[]}\r\n        }\r\n    }\r\n\r\n    const[presenters, setPresenters] = useState(dummypresenters)\r\n    const [newMessage, setNewMessage] = useState(props.timeInfo.getChatMessage())\r\n    /*props.socket.on(\"message\", receiveMessage);\r\n\r\n    function receiveMessage(e:any){\r\n        let message = JSON.parse(e.data);\r\n        console.log(message);\r\n        const newPresenters = presenters.map((p) => {\r\n            if (p.id == 0) {\r\n                p.chats.push(message[\"message\"])\r\n                return{...p, chats:p.chats}\r\n            } else {\r\n                return p;\r\n            }\r\n        });\r\n        setPresenters(newPresenters);\r\n    }*/\r\n    if (checksetMessage) clearInterval(checksetMessage);\r\n    checksetMessage = setInterval(function(){setNewMessage(props.timeInfo.getChatMessage())}, 100);\r\n\r\n    React.useEffect(() => {\r\n        const newPresenters = presenters.map((p) => {\r\n            /*\r\n            if (p.id == number(newMessage[\"to\"])) {\r\n                p.chats.push(newMessage[\"sender\"]+\": \"+newMessage[\"message\"])\r\n                return{...p, chats:p.chats}\r\n            } else {\r\n                return p;\r\n            }*/\r\n            \r\n            if (p.id == 0) {\r\n                p.chats.push(newMessage[\"message\"])\r\n                return{...p, chats:p.chats}\r\n            } else {\r\n                return p;\r\n            }\r\n        });\r\n        setPresenters(newPresenters);\r\n        savedummypresenters = newPresenters.slice()\r\n    },[newMessage])\r\n\r\n    const handleMemoChange = (id: number, memo: string) => {\r\n        const newPresenters = presenters.map((p) => {\r\n            return p.id === id\r\n                ? {...p, memo:memo}\r\n                :p;\r\n        });\r\n        setPresenters(newPresenters);\r\n        savedummypresenters = newPresenters.slice()\r\n    };\r\n\r\n    const handleSendButtonClick = (presentername: string, sendmessage: string) => {\r\n        //送信の処理ができればここでする？\r\n        sendMessage(props, presentername, sendmessage)        \r\n    };\r\n    \r\n    const presenterTabs = presenters.map((p) => {\r\n        return(\r\n            <PresenterTab\r\n                presenter={p}\r\n                key={p.id}\r\n                onMemoChange={(id, memo) => handleMemoChange(id, memo)}\r\n                onSendButtonClick={handleSendButtonClick}\r\n                //onMemoChange={(id, memo) => {}}\r\n            />\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div>\r\n            <Tabs>\r\n                {presenterTabs}\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MemoArea;","import React, { useCallback } from \"react\";\r\nimport \"./TabTitle.css\"\r\n\r\ntype TabTitleProps = {\r\n    title: string\r\n    index: number\r\n    setSelectedTab: (index: number) => void\r\n    isSelected: boolean\r\n}\r\n\r\nconst TabTitle: React.FC<TabTitleProps> = ({title, setSelectedTab, index, isSelected}) => {\r\n    const onClick = useCallback(() => {\r\n        setSelectedTab(index)\r\n    }, [setSelectedTab, index])\r\n    \r\n    return(\r\n        <li>\r\n            {\r\n                (() => {\r\n                    if(isSelected) {\r\n                        return <button className=\"selected\" onClick={onClick}>{title}</button>\r\n                    } else {\r\n                        return <button className=\"notSelected\" onClick={onClick}>{title}</button>\r\n                    }\r\n                })()\r\n            }\r\n            {/*<button onClick={onClick}>{title}</button>*/}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TabTitle","import React, {ReactElement, useState} from \"react\";\r\n//import Tab from \"./Tab\";\r\nimport TabTitle from \"./TabTitle\";\r\nimport \"./Tabs.css\"\r\n\r\ntype TabsProps = {\r\n    children: ReactElement[]\r\n}\r\n\r\nconst Tabs: React.FC<TabsProps> = ({children}) => {\r\n    const[selectedTab, setSelectedTab] = useState(0)\r\n\r\n    return(\r\n        <div className=\"tabs\">\r\n            <ul className=\"nav\">\r\n                {children.map((item, index) => (\r\n                    <TabTitle \r\n                        key={index}\r\n                        title={item.props.presenter.name}\r\n                        index={index}\r\n                        setSelectedTab={setSelectedTab}\r\n                        isSelected={index == selectedTab}/>\r\n                ))}\r\n            </ul>\r\n            {children[selectedTab]}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tabs","import React from \"react\";\r\nimport \"./Tab.css\"\r\nimport {TodayPresenter} from \"../TodayPresenter\"\r\n\r\ntype TabProps = {\r\n    title: string;\r\n}\r\n\r\nconst Tab: React.FC<TabProps> = ({children}) => {\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div className=\"Memo\">{children}</div>\r\n            {/*<div className=\"Memo\"></div>*/}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Tab\r\n","  \r\nimport React, {useState} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\nimport \"./AlignItemsList.css\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n}));\r\n\r\ntype AlignItemsListProps = {\r\n    chats: string[]\r\n}\r\n\r\nconst AlignItemsList = (props: AlignItemsListProps) => {\r\n    const[chats, setChats] = useState(props.chats)\r\n    const classes = useStyles();\r\n    //const chats = props.chats\r\n\r\n    return (\r\n        <div style={{height: 200, overflow: 'auto', border: '2px solid grey' }}>\r\n            {chats.map((item, index) => (\r\n                <List className={classes.root}\r\n                    key={index}>\r\n                    <ListItem alignItems=\"flex-start\">\r\n                        <ListItemText primary={item}/>\r\n                    </ListItem>\r\n                    {/*<Divider variant=\"inset\" component=\"li\"/>*/}\r\n                </List>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlignItemsList;","import React from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    leftIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    iconSmall: {\r\n        fontSize: 14,\r\n    },\r\n}));\r\n/*\r\nfunction SendButton() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n            <Icon>send</Icon>\r\n        </Button>\r\n    );\r\n}*/\r\ntype SendButtonProps = {\r\n    onSendButtonClick:(e: any) => void;\r\n}\r\n\r\nconst SendButton = (props:SendButtonProps) => {\r\n    const classes = useStyles();\r\n\r\n    const handleSendClick = (e: any) => {\r\n        props.onSendButtonClick(e);\r\n    }\r\n    return (\r\n        <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            className={classes.button}\r\n            onClick={handleSendClick}>\r\n            <Icon>send</Icon>\r\n        </Button>\r\n    );\r\n}\r\nexport default SendButton;","import React, {Component} from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./TextInput.css\"\r\nimport SendButton from './SendButton';\r\nimport { isPropertySignature } from \"typescript\";\r\n/*\r\nclass TextInput extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <form className=\"wrap\" noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        id = \"standard-text\"\r\n                        label=\"メッセージを入力\"\r\n                        className=\"text\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <SendButtons />\r\n                </form>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n*/\r\n\r\ntype TextInputProps = {\r\n    onButtonClick: (e: any) => void;\r\n};\r\n\r\nconst TextInput = (props:TextInputProps) => {  \r\n    const handleSendButtonClick = (e: any) => {\r\n        var chatfield =document.getElementById('standard-text') as HTMLInputElement;\r\n        var namefield =document.getElementById('name-text') as HTMLInputElement;\r\n        props.onButtonClick(namefield.value+' '+chatfield.value)\r\n        //console.log(chatfield)\r\n        if (chatfield != null) {\r\n            chatfield.value=\"\";\r\n        }\r\n    }\r\n\r\n    //enterを押したときに勝手にリフレッシュされるのを防止\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <form className=\"wrap\" noValidate autoComplete=\"off\" onSubmit={e => handleSubmit(e)}>\r\n                <TextField\r\n                    id = \"name-text\"\r\n                    label=\"名前\"\r\n                    className=\"text-name\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id = \"standard-text\"\r\n                    label=\"メッセージを入力\"\r\n                    className=\"text\"\r\n                    margin=\"normal\"\r\n                    onKeyPress={e => {\r\n                        if (e.key == 'Enter') {\r\n                            handleSendButtonClick(e);\r\n                        }}}\r\n                />\r\n                <SendButton \r\n                    onSendButtonClick={(e) => handleSendButtonClick(e)}/>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TextInput;","import React, {useState, Component, useEffect} from \"react\";\r\nimport { isPropertySignature } from \"typescript\";\r\n\r\n//import {connect} from 'react-redux'\r\n\r\nimport AlignItemsList from \"./AlignItemsList\";\r\nimport TextInput from \"./TextInput\";\r\n\r\n/*class ChatArea extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"Chat\">\r\n                    <AlignItemsList/>\r\n                    <TextInput/>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}*/\r\ntype ChatAreaProps = {\r\n    chats: string[];\r\n    onSendButtonClick: (chat: string) => void;\r\n}\r\n\r\nconst ChatArea = (props:ChatAreaProps) => {\r\n    //const chats = props.chats\r\n    const[chats, setChats] = useState(props.chats);\r\n    //boolean型のstateを作成\r\n    const [update,setUpdata]=useState<boolean>(false)\r\n    var newchat: string;\r\n\r\n    const handleButtonClick = (message: string) => {\r\n        const newChats = chats;\r\n        //var addchat = newname + ': '+newchat;\r\n        //newChats.push(addchat)\r\n        //newChats.push(message)\r\n        //setChats(newChats)\r\n\r\n        //レンダリングしたい場所でこれを差し込むだけ\r\n        //setUpdata(update?false:true)\r\n        console.log(props.chats)\r\n        props.onSendButtonClick(message);\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"Chat\">\r\n                <AlignItemsList\r\n                    chats = {chats}\r\n                    />\r\n                <TextInput\r\n                    onButtonClick={handleButtonClick}/>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ChatArea","import React from \"react\";\r\nimport { TodayPresenter } from \"./TodayPresenter\";\r\nimport Tab from \"./Tabs/Tab\"\r\nimport \"./PresenterTab.css\"\r\nimport ChatArea from \"./Tabs/Chat/ChatArea\";\r\n\r\ntype PresenterTabProps = {\r\n    presenter: TodayPresenter;\r\n    onMemoChange: (id: number, memo: string) => void;\r\n    onSendButtonClick: (presenterName:string, message: string) => void;\r\n};\r\n\r\nconst PresenterTab = (props:PresenterTabProps) => {\r\n    const {name, memo, chats} = props.presenter;\r\n\r\n    const handleMemoChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.onMemoChange(props.presenter.id, e.target.value);\r\n    };\r\n\r\n    const handleSendButtonClick = (message: string) => {\r\n        props.onSendButtonClick(props.presenter.name, message);\r\n    };\r\n\r\n    return(\r\n        <div className=\"presenter-tab\">\r\n            <Tab title=\"a\">\r\n                <div className=\"box\">\r\n                <div className=\"field\">\r\n                    <textarea\r\n                        //type=\"text\"\r\n                        className=\"memo\"\r\n                        placeholder=\"プライベートメモ\"\r\n                        value={memo}\r\n                        onChange={handleMemoChange}\r\n                    />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <ChatArea\r\n                        chats={chats}/*value={chats}*/\r\n                        onSendButtonClick={handleSendButtonClick}\r\n                    />\r\n                </div>\r\n                </div>\r\n            </Tab>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PresenterTab;\r\n","import { render } from '@testing-library/react';\r\nimport * as React from 'react';\r\n//import PrivateMemo from './PrivateMemo';\r\nimport MemoArea from './MemoArea';\r\nimport {TimeInfo} from '../TimeInfo'\r\nimport Socket from '../WebSocket'\r\n\r\nvar checksetPresenters:any = null;\r\n\r\ntype MemoProps = {\r\n  timeInfo: TimeInfo;\r\n  socket: Socket;\r\n}\r\n\r\nfunction Memo(props: MemoProps) {\r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(null);\r\n  const [presenter, setPresenters] = React.useState(props.timeInfo.getPresenters());\r\n  if (checksetPresenters) clearInterval(checksetPresenters);\r\n  checksetPresenters = setInterval(function(){setPresenters(props.timeInfo.getPresenters())}, 100);\r\n\r\n  //const presenter = props.timeInfo.getPresenters()\r\n  //const presenterNum = props.timeInfo.getNumPresenters()\r\n  var presenters:string[] = new Array(0)\r\n\r\n  for(var i = 0; i < presenter.length; i++) {\r\n    var temp_name = presenter[i].name\r\n    if(temp_name != 'break') {\r\n      //presenters[i] = presenter[i].name\r\n      presenters.push(presenter[i].name)\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      const renderCtx = canvasRef.current.getContext('2d');\r\n\r\n      if (renderCtx) {\r\n        setContext(renderCtx);\r\n      }\r\n    }\r\n\r\n    // if (context) context.fillRect(5, 5, 100, 100);\r\n  }, [context]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n      }}>\r\n        <div className=\"content\">\r\n            <MemoArea\r\n              presenters={presenters}\r\n              presenterNum={presenters.length}\r\n              timeInfo={props.timeInfo}\r\n              socket={props.socket}/>\r\n            {/*<PrivateMemo/>*/}\r\n          </div>\r\n      {/*<canvas\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        width={1000}\r\n        height={500}\r\n        style={{\r\n          border: '2px solid #000',\r\n          marginTop: 10,\r\n        }}\r\n      >\r\n        \r\n      </canvas>*/}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Memo;","import { time } from \"console\";\r\n\r\ntype Presenter = {\r\n  name: string;\r\n  time: number;\r\n}\r\n\r\nexport class TimeInfo{\r\n\r\n  \r\n  private startTime: Date = new Date();\r\n  private endTime: Date  = new Date();\r\n  private numPresenters: number = 1;\r\n  private presenters: Presenter[] = new Array(this.numPresenters).fill({name: '', time: 0});\r\n  private nowPresenterIndex = -1;\r\n  private presentTime = 0;\r\n  private breakTime = 0;\r\n  private chatMessage = {to:\"-1\", sender:\"\",message:\"\"};\r\n\r\n  constructor(){\r\n    this.startTime.setHours(13);\r\n    this.endTime.setHours(16);\r\n    this.numPresenters = 5;\r\n    this.presenters = [\r\n      {name:'abc', time:10},\r\n      {name:'def', time:1500},\r\n      {name:'break', time:600},\r\n      {name:'ghi', time:1500},\r\n      {name:'jkl', time:1500}];\r\n  }\r\n\r\n  getStartTime(){\r\n    return this.startTime;\r\n  }\r\n\r\n  getEndTime(){\r\n    return this.endTime;\r\n  }\r\n  \r\n  setStartTime(startTime: Date){\r\n    this.startTime = startTime;\r\n  }\r\n\r\n  setEndTime(endTime: Date){\r\n    this.endTime = endTime;\r\n  }\r\n\r\n  getNumPresenters(){\r\n    return this.numPresenters;\r\n  }\r\n\r\n  setNumPresenters(num: number){\r\n    this.numPresenters = this.presenters.length;\r\n    if(num >= 1){\r\n      if (num > this.presenters.length) {\r\n        for(var i=0; i<num-this.presenters.length; i++){\r\n          this.addPresenter(this.presenters.length, '', 0);\r\n        }\r\n      }else if(num < this.presenters.length){\r\n        for(var i=0; i<this.presenters.length-num; i++){\r\n          this.deletePresenter(this.presenters.length-1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  addNumPresenters(num: number){\r\n    this.numPresenters = this.presenters.length;\r\n    if(this.numPresenters + num >= 1){\r\n      if (num > 0) {\r\n        for(var i=0; i<num; i++){\r\n          this.addPresenter(this.presenters.length, '', 0);\r\n        }\r\n      }else if(num < 0){\r\n        for(var i=0; i<-num; i++){\r\n          this.deletePresenter(this.presenters.length-1);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.endTime.setSeconds(this.endTime.getSeconds() + 60);\r\n    this.endTime = new Date(this.endTime);\r\n  }\r\n\r\n  getPresenters(){\r\n    return this.presenters;\r\n  }\r\n\r\n  setPresenters(presenters: Presenter[]){\r\n    this.presenters = presenters;\r\n  }\r\n\r\n  deletePresenter(idx: number){\r\n    this.presenters = this.presenters.slice(0, idx).concat(this.presenters.slice(idx+1, this.presenters.length));\r\n    this.numPresenters -= 1;\r\n  }\r\n\r\n  addPresenter(idx: number, name: string, time: number){\r\n    this.presenters.splice(idx, 0, {name: name, time: time});\r\n    this.numPresenters += 1;\r\n  }\r\n\r\n  getNowPresenterIndex(){\r\n    return this.nowPresenterIndex;\r\n  }\r\n\r\n  setNowPresenterIndex(nowPresenterIndex: number){\r\n    this.nowPresenterIndex = nowPresenterIndex;\r\n  }\r\n\r\n  toNextPresenter(prevTime: number){\r\n    if(this.nowPresenterIndex >= 0){\r\n      //実際に発表にかかった時間に更新\r\n      var presenters_copy = this.presenters.slice();\r\n      presenters_copy[this.nowPresenterIndex]['time'] = prevTime; \r\n      this.presenters = presenters_copy;\r\n    }\r\n\r\n    this.nowPresenterIndex += 1;\r\n    return this.getNowPresentDate();\r\n  }\r\n\r\n  getPresentTime(){\r\n    return this.presentTime;\r\n  }\r\n\r\n  setPresentTime(num: number){\r\n    this.presentTime = num;\r\n    var presenters_copy = this.presenters.slice();\r\n    for(var i=0; i<this.numPresenters; i++){\r\n      if(presenters_copy[i]['name'] !== 'break' && i >= this.nowPresenterIndex) presenters_copy[i]['time'] = num * 60;\r\n    }\r\n    this.presenters = presenters_copy;\r\n  }\r\n\r\n  getNowPresentDate(){\r\n    // 今の発表者の終わり時間を計算\r\n    var sec = 0;\r\n    for(var i=0; i<this.nowPresenterIndex; i++){\r\n      sec += this.presenters[i]['time'];\r\n    }\r\n    const nowPresenterStartDate = new Date();\r\n    nowPresenterStartDate.setSeconds(this.startTime.getSeconds() + sec);\r\n    const nowPresenterEndDate = new Date();\r\n    nowPresenterEndDate.setSeconds(this.startTime.getSeconds() + sec + this.presenters[this.nowPresenterIndex]['time']);\r\n\r\n    return [nowPresenterStartDate, nowPresenterEndDate];\r\n  }\r\n\r\n  getBreakTime(){\r\n    return this.breakTime;\r\n  }\r\n\r\n  setBreakTime(num: number){\r\n    this.breakTime = num;\r\n    var presenters_copy = this.presenters.slice();\r\n    for(var i=0; i<this.numPresenters; i++){\r\n      if(presenters_copy[i]['name'] === 'break' && i >= this.nowPresenterIndex) presenters_copy[i]['time'] = num * 60;\r\n    }\r\n    this.presenters = presenters_copy;\r\n  }\r\n\r\n  getPresenterList(){\r\n    var presenterlist = [];\r\n    for (const presenter of this.presenters){\r\n      presenterlist.push(presenter['name']);\r\n    }\r\n    return presenterlist;\r\n  }\r\n\r\n  setPresenterList(presenterlist: string[]){\r\n    var presenters = this.presenters.slice(0, this.presenters.length);\r\n    for (var i=0; i < presenters.length; i++){\r\n      presenters[i]['name'] = presenterlist[i];\r\n    }\r\n    this.presenters = presenters;\r\n  }\r\n\r\n  getTimeSetting(){\r\n    var timesetting = [];\r\n    for (const presenter of this.presenters){\r\n      timesetting.push(presenter['time']);\r\n    }\r\n    return timesetting;\r\n  }\r\n\r\n  setTimeSetting(timesetting: number[]){\r\n    var presenters = this.presenters.slice(0, this.presenters.length);\r\n    for (var i=0; i < presenters.length; i++){\r\n      presenters[i]['time'] = timesetting[i];\r\n    }\r\n    this.presenters = presenters;\r\n  }\r\n\r\n  sendTimeInfo(){\r\n    const message = {\r\n      messagetype: \"setting\",\r\n      presenterlist: this.getPresenterList(),\r\n      starttime: this.startTime,\r\n      endtime: this.endTime,\r\n      presenttime: this.presentTime,\r\n      breaktime: this.breakTime,\r\n    }\r\n  }\r\n\r\n  sendChangePresenter(){\r\n    const message = {\r\n      messagetype: \"changepresenter\",\r\n      nextpresenter: this.nowPresenterIndex,\r\n      timesetting: this.getTimeSetting(),\r\n    }\r\n  }\r\n\r\n  receiveTimeInfo(message:any){\r\n    this.setPresenterList(message.presenterlist);\r\n    this.setStartTime(message.starttime);\r\n    this.setEndTime(message.endtime);\r\n    this.setPresentTime(message.presenttime);\r\n    this.setBreakTime(message.breaktime);\r\n  }\r\n\r\n  getChatMessage() {\r\n    return this.chatMessage;\r\n  }\r\n\r\n  setChatMessage(message: any) {\r\n    this.chatMessage = message\r\n  }\r\n\r\n  receiveChangePresenter(message:any){\r\n    this.setNowPresenterIndex(message.nextpresenter);\r\n    this.setTimeSetting(message.timesetting);\r\n  }\r\n}","import { EventEmitter } from \"events\";\r\n\r\nexport default class Socket {\r\n  private ws;\r\n  private ee;\r\n\r\n  constructor(ws: WebSocket, ee = new EventEmitter()) {\r\n    this.ws = ws;\r\n    this.ee = ee;\r\n    ws.onmessage = this.message.bind(this);\r\n    ws.onopen = this.open.bind(this);\r\n    ws.onclose = this.close.bind(this);\r\n    ws.onerror = this.error.bind(this);\r\n  }\r\n\r\n  on(name:string, fn:any) {\r\n    this.ee.on(name, fn);\r\n  }\r\n\r\n  off(name:string, fn:any) {\r\n    this.ee.removeListener(name, fn);\r\n  }\r\n\r\n  open() {\r\n    this.ee.emit(\"connect\");\r\n  }\r\n\r\n  close() {\r\n    this.ee.emit(\"disconnect\");\r\n  }\r\n\r\n  error(e:any) {\r\n    console.log(\"websocket error: \", e);\r\n  }\r\n\r\n  emit(data:any) {\r\n    this.ws.send(data)\r\n  }\r\n\r\n  message(e:any) {\r\n    try {\r\n      this.ee.emit(\"message\", e);\r\n\r\n    } catch (err) {\r\n      this.ee.emit(\"error\", err);\r\n      console.log(Date().toString() + \": \", err);\r\n    }\r\n  }\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Time from './Time/Time';\r\nimport Memo from './Memo/Memo';\r\nimport { TimeInfo } from './TimeInfo';\r\nimport Socket from './WebSocket';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport MemoArea from './Memo/MemoArea';\r\n\r\nconst timeInfo = new TimeInfo();\r\n\r\n// let ws = new WebSocket(\"ws://localhost:1323/ws\");\r\nlet ws = new WebSocket(\"wss://warm-gorge-29708.herokuapp.com/ws\");\r\nlet socket = new Socket(ws);\r\nsocket.on(\"message\", receiveMessage);\r\nfunction receiveMessage(e:any){\r\n  let message = JSON.parse(e.data);\r\n  console.log(message);\r\n  if(message[\"messagetype\"] == \"memo\") {\r\n    timeInfo.setChatMessage(message);\r\n  }\r\n\r\n  if (message.messagetype == \"setting\") timeInfo.receiveTimeInfo(message);\r\n  if (message.messagetype == \"changepresenter\") timeInfo.receiveChangePresenter(message);\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Time timeInfo={timeInfo}/>\r\n    <Memo timeInfo={timeInfo}\r\n      socket={socket}/>\r\n    <button onClick={()=>{\r\n      // var message = \"React!\";\r\n      var message = {messagetype:\"memo\", message:\"React!\"};\r\n      var mes_json = JSON.stringify(message);\r\n      console.log(mes_json);\r\n      socket.emit(mes_json);\r\n    }}>\r\n      送信\r\n    </button>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}