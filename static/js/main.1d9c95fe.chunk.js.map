{"version":3,"sources":["Time/Time.tsx","Memo/Memo.tsx","reportWebVitals.ts","index.tsx"],"names":["Time","canvasRef","React","context","setContext","current","renderCtx","getContext","style","textAlign","id","ref","width","height","border","marginTop","Memo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAsCeA,MAnCf,WACE,IAAMC,EAAYC,SAAgC,MAClD,EAA8BA,WAAgD,MAA9E,mBAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAF,aAAgB,WACd,GAAID,EAAUI,QAAS,CACrB,IAAMC,EAAYL,EAAUI,QAAQE,WAAW,MAE3CD,GACFF,EAAWE,MAKd,CAACH,IAGF,qBACEK,MAAO,CACLC,UAAW,UAFf,SAIE,wBACEC,GAAG,SACHC,IAAKV,EACLW,MAAO,IACPC,OAAQ,IACRL,MAAO,CACLM,OAAQ,iBACRC,UAAW,SCONC,MAnCf,WACE,IAAMf,EAAYC,SAAgC,MAClD,EAA8BA,WAAgD,MAA9E,mBAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAF,aAAgB,WACd,GAAID,EAAUI,QAAS,CACrB,IAAMC,EAAYL,EAAUI,QAAQE,WAAW,MAE3CD,GACFF,EAAWE,MAKd,CAACH,IAGF,qBACEK,MAAO,CACLC,UAAW,UAFf,SAIE,wBACEC,GAAG,SACHC,IAAKV,EACLW,MAAO,IACPC,OAAQ,IACRL,MAAO,CACLM,OAAQ,iBACRC,UAAW,SCjBNE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1d9c95fe.chunk.js","sourcesContent":["import { render } from '@testing-library/react';\r\nimport * as React from 'react';\r\n\r\nfunction Time() {\r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      const renderCtx = canvasRef.current.getContext('2d');\r\n\r\n      if (renderCtx) {\r\n        setContext(renderCtx);\r\n      }\r\n    }\r\n\r\n    // if (context) context.fillRect(5, 5, 100, 100);\r\n  }, [context]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n      }}>\r\n      <canvas\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        width={1000}\r\n        height={300}\r\n        style={{\r\n          border: '2px solid #000',\r\n          marginTop: 10,\r\n        }}\r\n      ></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Time;","import { render } from '@testing-library/react';\r\nimport * as React from 'react';\r\n\r\nfunction Memo() {\r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      const renderCtx = canvasRef.current.getContext('2d');\r\n\r\n      if (renderCtx) {\r\n        setContext(renderCtx);\r\n      }\r\n    }\r\n\r\n    // if (context) context.fillRect(5, 5, 100, 100);\r\n  }, [context]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n      }}>\r\n      <canvas\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        width={1000}\r\n        height={500}\r\n        style={{\r\n          border: '2px solid #000',\r\n          marginTop: 10,\r\n        }}\r\n      ></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Memo;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Time from './Time/Time';\r\nimport Memo from './Memo/Memo';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Time />\r\n    <Memo />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}