{"version":3,"sources":["Time/DisplayTime.tsx","Time/SettingContents.tsx","Time/SettingModal.tsx","Time/TimeBar.tsx","Time/Time.tsx","Memo/Tabs/TabTitle.tsx","Memo/Tabs/Tabs.tsx","Memo/Tabs/Tab.tsx","Memo/PresenterTab.tsx","Memo/MemoArea.tsx","Memo/Memo.tsx","reportWebVitals.ts","index.tsx","TimeInfo.tsx"],"names":["DisplayTime","props","expiryTimestamp","useTimer","onExpire","console","warn","seconds","minutes","hours","restart","days","isRunning","start","pause","resume","useEffect","sec","endTime","time","Date","setSeconds","getSeconds","className","style","fontSize","onClick","SettingContents","useState","timeInfo","getStartTime","getHours","startHour","setStartHour","getMinutes","startMin","setStartMin","getEndTime","endHour","setEndHour","endMin","setEndMin","getNumPresenters","numPresenters","setNumPresenters","addNumPresenters","Modal","setAppElement","SettingModal","React","modalIsOpen","setIsOpen","isOpen","beginposition","endposition","bar_y_position","colors","checksetStartTime","checksetEndTime","checksetPresenters","checkdraw","secTohourmin","hour","Math","floor","min","String","hourminsecTosec","timestrs","split","Number","draw","context","canvasRef","starttime","endtime","names","times","current","clearRect","width","height","barposition","sum","Array","length","timelength","i","j","calcBarPosition","globalAlpha","strokeStyle","textAlign","beginPath","moveTo","lineTo","stroke","font","fillText","timestr","toLocaleTimeString","hour12","minute","second","nowtimeposition","calcNowtimePosition","TimeBar","setContext","startTime","setStartTime","setEndTime","getPresenters","presenters","setPresenters","clearInterval","setInterval","push","name","position","left","top","renderCtx","getContext","id","ref","border","marginTop","Time","TabTitle","title","setSelectedTab","index","useCallback","Tabs","children","selectedTab","map","item","presenter","Tab","PresenterTab","memo","value","onChange","e","onMemoChange","target","dummyPresenters","MemoArea","presenterTabs","p","newPresenters","handleMemoChange","Memo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","this","breakTime","interbal","setHours","num","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0377524.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./DisplayTime.css\"\r\nimport { useTimer } from \"react-timer-hook\"; //npm install react-timer-hook が必要\r\n\r\ntype TimeFormat = {\r\n  seconds: number;\r\n  minutes: number;\r\n  hours: number;\r\n}\r\n\r\ntype Props = {\r\n  endTime: TimeFormat;\r\n}\r\n\r\n/*\r\n * 引数は上のTimeFormatのように{seconds, minutes, hours}の３つを与える．\r\n * 現在時刻から引数の時間分足した値をタイマーセット時間としてスタートする．（終了時刻を与えてタイマー動かした方がいい？）\r\n * 引数propsの内容が変わるか，切り替えボタンが押されたときにタイマーがリスタートされる\r\n */\r\nfunction DisplayTime( props: Props, { expiryTimestamp }: { expiryTimestamp: number } ) {\r\n\r\n  const {\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    days,\r\n    isRunning,\r\n    start,\r\n    pause,\r\n    resume,\r\n    restart,\r\n  } = useTimer({\r\n    expiryTimestamp,\r\n    onExpire: () => console.warn(\"onExpire called\"),\r\n  });\r\n\r\n  useEffect(()=>{\r\n    // タイマーをセットする部分\r\n    const sec = props.endTime.hours*3600 + props.endTime.minutes*60 + props.endTime.seconds\r\n    const time = new Date();\r\n    time.setSeconds(time.getSeconds() + sec);\r\n    restart(time as unknown as number);\r\n  }, [props.endTime]); //propsが更新されたら新しくタイマーがスタートする\r\n\r\n  return (\r\n    <div /*style={{ textAlign: \"center\" }}*/ className=\"flex\">\r\n      <div style={{ fontSize: \"500%\" }}>\r\n        <span>{hours}</span>:<span>{minutes}</span>:<span>{seconds}</span>\r\n      </div>\r\n      <button className=\"button\"\r\n        onClick={()=> {\r\n          // タイマーをセットする部分\r\n          const sec = props.endTime.hours*3600 + props.endTime.minutes*60 + props.endTime.seconds\r\n          const time = new Date();\r\n          time.setSeconds(time.getSeconds() + sec);\r\n          restart(time as unknown as number);\r\n        }}\r\n      >\r\n        切替\r\n      </button>\r\n    </div>\r\n  );  \r\n\r\n}\r\n\r\nexport default DisplayTime;","import React, { useEffect, useState } from \"react\";\r\nimport { TimeInfo } from \"../TimeInfo\";\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\n\r\nfunction SettingContents(props: Props) {\r\n\r\n\r\n    const [startHour, setStartHour] = useState(props.timeInfo.getStartTime().getHours());\r\n    const [startMin, setStartMin] = useState(props.timeInfo.getStartTime().getMinutes());\r\n    const [endHour, setEndHour] = useState(props.timeInfo.getEndTime().getHours());\r\n    const [endMin, setEndMin] = useState(props.timeInfo.getEndTime().getMinutes());\r\n    const [numPresenters, setNumPresenters] = useState(props.timeInfo.getNumPresenters());\r\n\r\n    useEffect(()=>{\r\n      setStartHour(props.timeInfo.getStartTime().getHours());\r\n      setStartMin(props.timeInfo.getStartTime().getMinutes());\r\n      setEndHour(props.timeInfo.getEndTime().getHours());\r\n      setEndMin(props.timeInfo.getEndTime().getMinutes());\r\n      setNumPresenters(props.timeInfo.getNumPresenters());\r\n    }, [props.timeInfo])\r\n\r\n  return(\r\n    <div>\r\n      <p>設定項目</p>\r\n      <p>開始時間 {startHour}:{startMin} 終了時間 {endHour}:{endMin}</p>\r\n      <p>発表人数{numPresenters}人</p>\r\n      <button onClick={()=>{\r\n        props.timeInfo.addNumPresenters(2);\r\n        setNumPresenters(props.timeInfo.getNumPresenters());\r\n      }}>人数+</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingContents;","import React, { useEffect } from \"react\";\r\nimport SettingContents from \"./SettingContents\";\r\nimport { TimeInfo } from \"../TimeInfo\";\r\nimport Modal from \"react-modal\"; //npm install --save react-modal @types/react-modal でインストール\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\nfunction SettingModal(props: Props){\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={()=>{\r\n          setIsOpen(true)\r\n        }}  \r\n      >\r\n        設定\r\n      </button>\r\n      <Modal isOpen={modalIsOpen}>\r\n        <button\r\n          onClick={()=>{\r\n            setIsOpen(false)\r\n          }}  \r\n        >\r\n          閉じる\r\n        </button>\r\n        <SettingContents \r\n          timeInfo={props.timeInfo}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingModal;","import * as React from 'react';\r\nimport { TimeInfo } from \"../TimeInfo\";\r\n\r\nconst beginposition = 40;\r\nconst endposition = 920;\r\nconst vertical_bar_y_begin = 30;\r\nconst vertical_bar_y_end = 110;\r\nconst nowtime_bar_y_begin = 50;\r\nconst nowtime_bar_y_end = 90;\r\nconst nowtime_bar_x_diff = 20;\r\nvar time:Date;\r\nconst bar_y_position = 70;\r\nconst timetext_y_position = 140;\r\nconst nametext_y_position = 45;\r\nconst nowtimetext_y_position = 110;\r\nconst colors:string[] = ['red', 'blue', 'black', 'green', 'orange'];\r\nvar checksetStartTime:any = null;\r\nvar checksetEndTime:any = null;\r\nvar checksetPresenters:any = null;\r\nvar checkdraw:any = null;\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\nfunction calcBarPosition(starttime:number, endtime:number, times:number[]) {\r\n  var barposition:number[] = new Array(times.length - 1);\r\n  var timelength = endtime - starttime;\r\n  var barlength = endposition - beginposition;\r\n  var sum;\r\n\r\n  for (var i = 0; i < times.length - 1; i++) {\r\n    sum = 0;\r\n    for (var j = 0; j <= i; j++) {\r\n      sum += times[j];\r\n    }\r\n    barposition[i] = beginposition + (barlength * (sum / timelength));\r\n  }\r\n\r\n  return barposition;\r\n}\r\n\r\nfunction calcNowtimePosition(timestr:string, starttime:number, endtime:number) {\r\n  var timelength = endtime - starttime;\r\n  var barlength = endposition - beginposition;\r\n  var second = hourminsecTosec(timestr);\r\n\r\n  return (beginposition + (barlength * ((second - starttime) / timelength)));\r\n}\r\n\r\nfunction secTohourmin(seconds:number) {\r\n  var hour:number = Math.floor(seconds / 3600);\r\n  var min:number = Math.floor((seconds - (hour * 3600)) / 60);\r\n  var hourstr:string;\r\n  var minstr:string;\r\n\r\n  if (hour < 10) {\r\n    hourstr = '0' + String(hour);\r\n  }\r\n  else {\r\n    hourstr = String(hour);\r\n  }\r\n  if (min < 10) {\r\n    minstr = '0' + String(min);\r\n  }\r\n  else {\r\n    minstr = String(min);\r\n  }\r\n\r\n  return (hourstr + ':' + minstr);\r\n}\r\n\r\nfunction hourminsecTosec(time:string) {\r\n  var timestrs = time.split(':');\r\n  var hour:number = Number(timestrs[0]);\r\n  var min:number = Number(timestrs[1]);\r\n  var second:number = Number(timestrs[2]);\r\n\r\n  return ((hour * 3600) + (min * 60) + second);\r\n}\r\n\r\nfunction draw(context:any, canvasRef:any, starttime:number, endtime:number, names:string[], times:number[]) {\r\n  time = new Date();\r\n  if (context) {\r\n    if (canvasRef.current) context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    var barposition = calcBarPosition(starttime, endtime, times);\r\n    context.globalAlpha = 1.0\r\n    context.strokeStyle = 'black';\r\n    context.textAlign = 'center';\r\n    // begin time\r\n    context.beginPath();\r\n    context.moveTo(beginposition, vertical_bar_y_begin);\r\n    context.lineTo(beginposition, vertical_bar_y_end);\r\n    context.stroke();\r\n    context.font = '25px serif';\r\n    context.fillText(names[0], (beginposition + barposition[0]) / 2, nametext_y_position)\r\n    context.font = '30px serif';\r\n    context.fillText(secTohourmin(starttime), beginposition, timetext_y_position)\r\n  \r\n    // end time\r\n    context.beginPath();\r\n    context.moveTo(endposition, vertical_bar_y_begin);\r\n    context.lineTo(endposition, vertical_bar_y_end);\r\n    context.stroke();\r\n    context.font = '25px serif';\r\n    context.fillText(names[names.length - 1], (barposition[barposition.length - 1] + endposition) / 2, nametext_y_position)\r\n    context.font = '30px serif';\r\n    context.fillText(secTohourmin(endtime), endposition, timetext_y_position)\r\n  \r\n    // change time\r\n    for (var i = 0; i < barposition.length + 1; i++) {\r\n      context.strokeStyle = 'black';\r\n      context.beginPath();\r\n      context.moveTo(barposition[i], vertical_bar_y_begin);\r\n      context.lineTo(barposition[i], vertical_bar_y_end);\r\n      context.stroke();\r\n      context.strokeStyle = colors[i];\r\n      context.beginPath();\r\n      if (i == 0) {\r\n        context.moveTo(beginposition, bar_y_position);\r\n      }\r\n      else {\r\n        context.moveTo(barposition[i - 1], bar_y_position);\r\n      }\r\n      if (i < barposition.length - 1) {\r\n        context.lineTo(barposition[i], bar_y_position);\r\n      }\r\n      else {\r\n        context.lineTo(endposition, bar_y_position);\r\n      }\r\n      context.stroke();\r\n      if (i < barposition.length) {\r\n        var sum = 0;\r\n        for (var j = 0; j <= i; j++) sum += times[j];\r\n        if (i > 0) {\r\n          context.font = '25px serif';\r\n          context.fillText(names[i], (barposition[i - 1] + barposition[i]) / 2, nametext_y_position)\r\n        }\r\n        context.font = '30px serif';\r\n        context.fillText(secTohourmin(starttime + sum), barposition[i], timetext_y_position)\r\n      }\r\n    }\r\n  \r\n    // now time\r\n    var timestr = time.toLocaleTimeString([], {hour12:false, hour:'2-digit', minute:'2-digit', second:'2-digit'});\r\n    var nowtimeposition = calcNowtimePosition(timestr, starttime, endtime);\r\n    context.strokeStyle = 'black';\r\n    context.beginPath();\r\n    context.moveTo(nowtimeposition - nowtime_bar_x_diff, nowtime_bar_y_begin);\r\n    context.lineTo(nowtimeposition, bar_y_position);\r\n    context.stroke();\r\n    context.beginPath();\r\n    context.moveTo(nowtimeposition - nowtime_bar_x_diff, nowtime_bar_y_end);\r\n    context.lineTo(nowtimeposition, bar_y_position);\r\n    context.stroke();\r\n    context.font = '20px serif';\r\n    context.fillText(timestr, nowtimeposition, nowtimetext_y_position);\r\n  }\r\n}\r\n\r\nfunction TimeBar(props: Props) {\r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(null);\r\n  const [startTime, setStartTime] = React.useState(props.timeInfo.getStartTime());\r\n  const [endTime, setEndTime] = React.useState(props.timeInfo.getEndTime());\r\n  const [presenters, setPresenters] = React.useState(props.timeInfo.getPresenters());\r\n  var starttime:number;\r\n  var endtime:number;\r\n  var names:string[] = [];\r\n  var times:number[] = [];\r\n\r\n  if (checksetStartTime) clearInterval(checksetStartTime);\r\n  checksetStartTime = setInterval(function(){setStartTime(props.timeInfo.getStartTime())}, 100);\r\n  starttime = hourminsecTosec(startTime.toLocaleTimeString([], {hour12:false, hour:'2-digit', minute:'2-digit', second:'2-digit'}));\r\n\r\n  if (checksetEndTime) clearInterval(checksetEndTime);\r\n  checksetEndTime = setInterval(function(){setEndTime(props.timeInfo.getEndTime())}, 100);\r\n  endtime = hourminsecTosec(endTime.toLocaleTimeString([], {hour12:false, hour:'2-digit', minute:'2-digit', second:'2-digit'}));\r\n\r\n  if (checksetPresenters) clearInterval(checksetPresenters);\r\n  checksetPresenters = setInterval(function(){setPresenters(props.timeInfo.getPresenters())}, 100);\r\n  for (var i = 0; i < presenters.length; i++) {\r\n    names.push(presenters[i].name);\r\n    times.push(presenters[i].time);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      canvasRef.current.style.position = 'absolute';\r\n      canvasRef.current.style.left = '280px';\r\n      canvasRef.current.style.top = '10px';\r\n      if (checkdraw) clearInterval(checkdraw);\r\n      checkdraw = setInterval(function(){draw(context, canvasRef, starttime, endtime, names, times)}, 10);\r\n      const renderCtx = canvasRef.current.getContext('2d');\r\n\r\n      if (renderCtx) {\r\n        setContext(renderCtx);\r\n      }\r\n    }\r\n    draw(context, canvasRef, starttime, endtime, names, times);\r\n  }, [context, startTime, endTime, presenters]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n      }}>\r\n      <canvas\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        width={960}\r\n        height={150}\r\n        style={{\r\n          border: '2px solid #000',\r\n          marginTop: 10,\r\n        }}\r\n      ></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeBar;","import { render } from '@testing-library/react';\r\nimport { time } from 'console';\r\nimport * as React from 'react';\r\n\r\nimport DisplayTime from './DisplayTime';\r\nimport SettingModal from './SettingModal';\r\n\r\nimport TimeBar from './TimeBar';\r\n\r\n\r\nimport { TimeInfo } from '../TimeInfo';\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\nfunction Time(props: Props) {\r\n  \r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      const renderCtx = canvasRef.current.getContext('2d');\r\n\r\n      if (renderCtx) {\r\n        setContext(renderCtx);\r\n      }\r\n    }\r\n\r\n    // if (context) context.fillRect(5, 5, 100, 100);\r\n  }, [context]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n      }}>\r\n      <canvas\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        width={1000}\r\n        height={300}\r\n        style={{\r\n          border: '2px solid #000',\r\n          marginTop: 10,\r\n        }}\r\n      ></canvas>\r\n      <TimeBar timeInfo={props.timeInfo}/>\r\n      <DisplayTime \r\n        endTime={{seconds:0, minutes:10, hours:0}}\r\n      />\r\n      <SettingModal \r\n        timeInfo={props.timeInfo}\r\n      />\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Time;","import React, { useCallback } from \"react\";\r\nimport \"./TabTitle.css\"\r\n\r\ntype TabTitleProps = {\r\n    title: string\r\n    index: number\r\n    setSelectedTab: (index: number) => void\r\n}\r\n\r\nconst TabTitle: React.FC<TabTitleProps> = ({title, setSelectedTab, index}) => {\r\n    const onClick = useCallback(() => {\r\n        setSelectedTab(index)\r\n    }, [setSelectedTab, index])\r\n    \r\n    return(\r\n        <li>\r\n            <button onClick={onClick}>{title}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TabTitle","import React, {ReactElement, useState} from \"react\";\r\n//import Tab from \"./Tab\";\r\nimport TabTitle from \"./TabTitle\";\r\nimport \"./Tabs.css\"\r\n\r\ntype TabsProps = {\r\n    children: ReactElement[]\r\n}\r\n\r\nconst Tabs: React.FC<TabsProps> = ({children}) => {\r\n    const[selectedTab, setSelectedTab] = useState(0)\r\n\r\n    return(\r\n        <div>\r\n            <ul className=\"nav\">\r\n                {children.map((item, index) => (\r\n                    <TabTitle \r\n                        key={index}\r\n                        title={item.props.presenter.name}\r\n                        index={index}\r\n                        setSelectedTab={setSelectedTab}/>\r\n                ))}\r\n            </ul>\r\n            {children[selectedTab]}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tabs","import React from \"react\";\r\nimport \"./Tab.css\"\r\nimport {TodayPresenter} from \"../TodayPresenter\"\r\n\r\ntype TabProps = {\r\n    title: string;\r\n}\r\n\r\nconst Tab: React.FC<TabProps> = ({children}) => {\r\n\r\n    const chatfield = () => {\r\n        return(\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div className=\"Memo\">{children}</div>\r\n            {/*<div className=\"Memo\"></div>*/}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Tab\r\n","import React from \"react\";\r\nimport { TodayPresenter } from \"./TodayPresenter\";\r\nimport Tab from \"./Tabs/Tab\"\r\nimport \"./PresenterTab.css\"\r\n\r\ntype PresenterTabProps = {\r\n    presenter: TodayPresenter;\r\n    onMemoChange: (id: number, memo: string) => void;\r\n};\r\n\r\nconst PresenterTab = (props:PresenterTabProps) => {\r\n    const {name, memo} = props.presenter;\r\n\r\n    const handleMemoChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.onMemoChange(props.presenter.id, e.target.value);\r\n    };\r\n\r\n    return(\r\n        <div className=\"presenter-tab\">\r\n            <Tab title=\"a\">\r\n                <div className=\"box\">\r\n                <div className=\"field\">\r\n                    <textarea\r\n                        //type=\"text\"\r\n                        className=\"memo\"\r\n                        value={memo}\r\n                        onChange={handleMemoChange}\r\n                    />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <input></input>\r\n                </div>\r\n                </div>\r\n            </Tab>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PresenterTab;\r\n","import React, {useState} from \"react\";\r\nimport Tabs from \"./Tabs/Tabs\"\r\nimport Tab from \"./Tabs/Tab\"\r\nimport Memo from \"./Memo\";\r\nimport { TodayPresenter } from \"./TodayPresenter\";\r\nimport PresenterTab from \"./PresenterTab\"\r\n//function SampleMemo() {\r\n\r\nconst dummyPresenters: TodayPresenter[] = [\r\n    {\r\n        id: 1,\r\n        name: \"A\",\r\n        memo: \"\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"B\",\r\n        memo: \"\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"C\",\r\n        memo: \"\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"D\",\r\n        memo: \"\"\r\n    },\r\n];\r\n\r\nconst MemoArea: React.FC = () => {\r\n    const[presenters, setPresenters] = useState(dummyPresenters);\r\n\r\n    const handleMemoChange = (id: number, memo: string) => {\r\n        const newPresenters = presenters.map((p) => {\r\n            return p.id === id\r\n                ? {...p, memo:memo}\r\n                :p;\r\n        });\r\n        setPresenters(newPresenters);\r\n    };\r\n\r\n    const presenterTabs = presenters.map((p) => {\r\n        return(\r\n            <PresenterTab\r\n                presenter={p}\r\n                key={p.id}\r\n                onMemoChange={(id, memo) => handleMemoChange(id, memo)}\r\n                //onMemoChange={(id, memo) => {}}\r\n            />\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div>\r\n            <Tabs>\r\n                {presenterTabs}\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MemoArea;","import { render } from '@testing-library/react';\r\nimport * as React from 'react';\r\n//import PrivateMemo from './PrivateMemo';\r\nimport MemoArea from './MemoArea';\r\n\r\nfunction Memo() {\r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      const renderCtx = canvasRef.current.getContext('2d');\r\n\r\n      if (renderCtx) {\r\n        setContext(renderCtx);\r\n      }\r\n    }\r\n\r\n    // if (context) context.fillRect(5, 5, 100, 100);\r\n  }, [context]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n      }}>\r\n        <div className=\"content\">\r\n            <MemoArea/>\r\n            {/*<PrivateMemo/>*/}\r\n          </div>\r\n      {/*<canvas\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        width={1000}\r\n        height={500}\r\n        style={{\r\n          border: '2px solid #000',\r\n          marginTop: 10,\r\n        }}\r\n      >\r\n        \r\n      </canvas>*/}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Memo;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Time from './Time/Time';\r\nimport Memo from './Memo/Memo';\r\nimport { TimeInfo } from './TimeInfo';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst timeInfo = new TimeInfo();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Time timeInfo={timeInfo}/>\r\n    <Memo />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import internal from \"stream\";\r\n\r\ntype Presenter = {\r\n  name: string;\r\n  time: number;\r\n}\r\n\r\n\r\n\r\nexport class TimeInfo{\r\n\r\n  private startTime: Date = new Date(0);\r\n  private endTime: Date  = new Date(0);\r\n  private numPresenters: number = 1;\r\n  private presenters: Presenter[] = new Array(this.numPresenters);\r\n  private breakTime = {interbal: 1, time: 0};\r\n\r\n  constructor(){\r\n    this.startTime.setHours(14);\r\n    this.endTime.setHours(16);\r\n    this.presenters = [\r\n      {name:'abc', time:1500},\r\n      {name:'def', time:1500},\r\n      {name:'break', time:600},\r\n      {name:'ghi', time:1500},\r\n      {name:'jkl', time:1500}];\r\n  }\r\n\r\n  getStartTime(){\r\n    return this.startTime;\r\n  }\r\n\r\n  getEndTime(){\r\n    return this.endTime;\r\n  }\r\n  \r\n  setStartTime(startTime: Date){\r\n    this.startTime = startTime;\r\n  }\r\n\r\n  setEndTime(endTime: Date){\r\n    this.endTime = endTime;\r\n  }\r\n\r\n  getNumPresenters(){\r\n    return this.numPresenters;\r\n  }\r\n\r\n  addNumPresenters(num: number){\r\n    this.numPresenters = this.numPresenters + num;\r\n    this.endTime.setSeconds(this.endTime.getSeconds() + 60);\r\n    this.endTime = new Date(this.endTime);\r\n  }\r\n\r\n  getPresenters(){\r\n    return this.presenters;\r\n  }\r\n\r\n  setPresenters(){\r\n\r\n  }\r\n\r\n  getBreakTime(){\r\n    return this.breakTime;\r\n  }\r\n\r\n  setBreakTime(){\r\n\r\n  }\r\n\r\n}"],"sourceRoot":""}