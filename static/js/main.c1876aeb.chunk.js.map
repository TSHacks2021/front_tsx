{"version":3,"sources":["Time/DisplayTime.tsx","Time/SettingContents.tsx","Time/SettingModal.tsx","Time/TimeBar.tsx","Time/Time.tsx","Memo/Tabs/TabTitle.tsx","Memo/Tabs/Tabs.tsx","Memo/Tabs/Tab.tsx","Memo/Tabs/Chat/AlignItemsList.tsx","Memo/Tabs/Chat/SendButton.tsx","Memo/Tabs/Chat/TextInput.tsx","Memo/Tabs/Chat/ChatArea.tsx","Memo/PresenterTab.tsx","Memo/MemoArea.tsx","Memo/Memo.tsx","TimeInfo.tsx","WebSocket.tsx","reportWebVitals.ts","index.tsx"],"names":["DisplayTime","props","expiryTimestamp","useTimer","onExpire","console","warn","seconds","minutes","hours","pause","days","isRunning","start","restart","resume","useState","presentTime","setPresentTime","Date","startDate","setStartDate","endDate","setEndDate","useEffect","setSeconds","getSeconds","className","style","fontSize","slice","onClick","remain","presentTime_","now","getHours","getMinutes","timeInfo","toNextPresenter","startDate_","endDate_","SettingContents","getStartTime","startHour","setStartHour","startMin","setStartMin","getEndTime","endHour","setEndHour","endMin","setEndMin","getNumPresenters","numPresenters","setNumPresenters","getPresenters","presenters","setPresenters","getPresentTime","getBreakTime","breakTime","setBreakTime","hundleDeletePresenter","idx","deletePresenter","hundleAddPresenter","break_","addPresenter","handlePresenterName","e","name","target","value","Number","split","presenters_copy","type","onChange","map","h","min","startTime","setHours","setMinutes","setStartTime","endTime","setEndTime","max","n","presenter","disabled","time","Modal","setAppElement","SettingModal","React","modalIsOpen","setIsOpen","isOpen","beginposition","endposition","bar_y_position","colors","checksetStartTime","checksetEndTime","checksetPresenters","checkdraw","secTohourmin","hour","Math","floor","String","hourminsecTosec","timestrs","draw","context","canvasRef","starttime","endtime","names","times","current","clearRect","width","height","barposition","sum","Array","length","timelength","i","j","calcBarPosition","globalAlpha","strokeStyle","textAlign","beginPath","moveTo","lineTo","stroke","font","fillText","timestr","toLocaleTimeString","hour12","minute","second","nowtimeposition","calcNowtimePosition","TimeBar","setContext","clearInterval","setInterval","push","position","left","top","renderCtx","getContext","id","ref","border","marginTop","Time","TabTitle","title","setSelectedTab","index","useCallback","Tabs","children","selectedTab","item","Tab","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","inline","display","AlignItemsList","chats","classes","maxHeight","overflow","List","ListItem","alignItems","ListItemText","primary","button","margin","spacing","leftIcon","marginRight","iconSmall","SendButton","Button","variant","color","onSendButtonClick","Icon","TextInput","Fragment","noValidate","autoComplete","TextField","label","onChatChange","onButtonClick","handleSendButtonClick","ChatArea","newchat","setChats","update","setUpdata","chat","newChats","log","PresenterTab","memo","onMemoChange","MemoArea","dummypresenters","presenterNum","presenterTabs","p","newPresenters","handleMemoChange","Memo","TimeInfo","this","fill","nowPresenterIndex","num","concat","splice","prevTime","sec","nowPresenterStartDate","nowPresenterEndDate","presenterlist","timesetting","getPresenterList","getTimeSetting","Socket","ws","ee","EventEmitter","onmessage","message","bind","onopen","open","onclose","close","onerror","error","fn","on","removeListener","emit","data","send","err","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","socket","WebSocket","JSON","parse","ReactDOM","render","StrictMode","mes_json","stringify","messagetype","document","getElementById"],"mappings":"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","file":"static/js/main.c1876aeb.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./DisplayTime.css\"\r\nimport { useTimer } from \"react-timer-hook\"; //npm install react-timer-hook が必要\r\nimport { TimeInfo } from \"../TimeInfo\";\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n// type TimeFormat = {\r\n//   seconds: number;\r\n//   minutes: number;\r\n//   hours: number;\r\n// }\r\n\r\n// type Props = {\r\n//   endTime: TimeFormat;\r\n// }\r\n\r\n\r\n/*\r\n * 引数は上のTimeFormatのように{seconds, minutes, hours}の３つを与える．\r\n * 現在時刻から引数の時間分足した値をタイマーセット時間としてスタートする．（終了時刻を与えてタイマー動かした方がいい？）\r\n * 引数propsの内容が変わるか，切り替えボタンが押されたときにタイマーがリスタートされる\r\n */\r\nfunction DisplayTime( props: Props, { expiryTimestamp }: { expiryTimestamp: number } ) {\r\n\r\n  const {\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    days,\r\n    isRunning,\r\n    start,\r\n    pause,\r\n    resume,\r\n    restart,\r\n  } = useTimer({\r\n    expiryTimestamp,\r\n    onExpire: () => console.warn(\"onExpire called\"),\r\n  });\r\n\r\n  // var presentTime: number;\r\n  // var startDate: Date;\r\n  // var endDate: Date;\r\n  const [presentTime, setPresentTime] = useState(10);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  useEffect(()=>{\r\n    // タイマーをセットする部分\r\n    setPresentTime(10);\r\n    setStartDate(new Date());\r\n    setEndDate(new Date());\r\n    endDate.setSeconds(startDate.getSeconds() + presentTime);\r\n    restart(endDate as unknown as number);\r\n  }, [])\r\n\r\n\r\n  const handleClick = () =>{\r\n    pause();\r\n    //今の発表者が発表した時間を計算\r\n    const remain = hours*3600 + minutes*60 + seconds;\r\n    var presentTime_ = presentTime;\r\n    if(remain > 0){\r\n      // 早く終わったとき\r\n      presentTime_ = (presentTime - remain);\r\n    }else{\r\n      // 時間オーバーしたとき\r\n      const now = new Date();\r\n      presentTime_ = ((now.getHours()*3600 + now.getMinutes()*60 + now.getSeconds()) - (startDate.getHours()*3600 + startDate.getMinutes()*60 + startDate.getSeconds()))\r\n    }\r\n\r\n    // タイマーをセットする部分\r\n    presentTime_ = (props.timeInfo.toNextPresenter(presentTime_));\r\n    var startDate_ = (new Date());\r\n    var endDate_ = (new Date());\r\n    endDate_.setSeconds(startDate_.getSeconds() + presentTime_);\r\n    restart(endDate_ as unknown as number);\r\n\r\n    setPresentTime(presentTime_);\r\n    setStartDate(startDate_);\r\n    setEndDate(endDate_);\r\n  }\r\n\r\n  const update = () => {\r\n    const [startDate_, endDate_] = props.timeInfo.getNowPresentDate();\r\n\r\n    restart(endDate_ as unknown as number);\r\n\r\n    setStartDate(startDate_);\r\n    setEndDate(endDate_);\r\n  }\r\n\r\n\r\n  return (\r\n    <div /*style={{ textAlign: \"center\" }}*/ className=\"flex\">\r\n      <div style={{ fontSize: \"500%\" }}>\r\n        <span>{( '00' + minutes ).slice( -2 )}</span>:<span>{( '00' + seconds ).slice( -2 )}</span>\r\n      </div>\r\n      <button className=\"button\" onClick={handleClick}>  切替  </button>\r\n    </div>\r\n  );  \r\n\r\n}\r\n\r\nexport default DisplayTime;","import React, { useEffect, useState } from \"react\";\r\nimport { TimeInfo } from \"../TimeInfo\";\r\nimport \"./SettingContents.css\";\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\n\r\nfunction SettingContents(props: Props) {\r\n\r\n  const [startHour, setStartHour] = useState(props.timeInfo.getStartTime().getHours());\r\n  const [startMin, setStartMin] = useState(props.timeInfo.getStartTime().getMinutes());\r\n  const [endHour, setEndHour] = useState(props.timeInfo.getEndTime().getHours());\r\n  const [endMin, setEndMin] = useState(props.timeInfo.getEndTime().getMinutes());\r\n  const [numPresenters, setNumPresenters] = useState(props.timeInfo.getNumPresenters());\r\n  const [presenters, setPresenters] = useState(props.timeInfo.getPresenters());\r\n  const [presentTime, setPresentTime] = useState(props.timeInfo.getPresentTime());\r\n  const [breakTime, setBreakTime] = useState(props.timeInfo.getBreakTime());\r\n\r\n  // useEffect(()=>{\r\n  //   setStartHour(props.timeInfo.getStartTime().getHours());\r\n  //   setStartMin(props.timeInfo.getStartTime().getMinutes());\r\n  //   setEndHour(props.timeInfo.getEndTime().getHours());\r\n  //   setEndMin(props.timeInfo.getEndTime().getMinutes());\r\n  //   setNumPresenters(props.timeInfo.getNumPresenters());\r\n  //   console.log('useEffect')\r\n  // }, [])\r\n\r\n  const handleStartTime = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    var [h, min] = e.target.value.split(':').map(Number);\r\n\r\n    //propsの更新\r\n    var startTime = new Date();\r\n    startTime.setHours(h);\r\n    startTime.setMinutes(min);\r\n    props.timeInfo.setStartTime(startTime); \r\n\r\n    setStartHour(h);\r\n    setStartMin(min);\r\n  }\r\n\r\n  const handleEndTime = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    var [h, min] = e.target.value.split(':').map(Number);\r\n\r\n    //propsの更新\r\n    var endTime = new Date();\r\n    endTime.setHours(h);\r\n    endTime.setMinutes(min);\r\n    props.timeInfo.setEndTime(endTime); \r\n\r\n    setEndHour(h);\r\n    setEndMin(min);\r\n  }\r\n\r\n  const handleNumPresenters = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    var n = Number(e.target.value);\r\n    props.timeInfo.setNumPresenters(n);\r\n\r\n    setNumPresenters(props.timeInfo.getNumPresenters());\r\n    setPresenters(props.timeInfo.getPresenters());\r\n  }\r\n\r\n\r\n  const hundleDeletePresenter = (idx:number) => {\r\n    if(numPresenters > 1){\r\n      props.timeInfo.deletePresenter(idx);\r\n\r\n      setPresenters(props.timeInfo.getPresenters());\r\n      setNumPresenters(props.timeInfo.getNumPresenters());\r\n    }\r\n  }\r\n\r\n  const hundleAddPresenter = (idx: number, break_: boolean) => {\r\n    if(!break_){\r\n      props.timeInfo.addPresenter(idx+1, \"\", 20*60);\r\n    }else{\r\n      props.timeInfo.addPresenter(idx+1, \"break\", 10*60);\r\n    }\r\n\r\n    setPresenters(props.timeInfo.getPresenters());\r\n    setNumPresenters(props.timeInfo.getNumPresenters());\r\n  }\r\n\r\n  const handlePresenterName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    var name = e.target.value;\r\n    var idx = Number(e.target.name.split('_')[1]);\r\n    var presenters_copy = presenters.slice();\r\n    presenters_copy[idx]['name'] = name;\r\n    props.timeInfo.setPresenters(presenters_copy);\r\n\r\n    setPresenters(props.timeInfo.getPresenters());\r\n  }\r\n\r\n  const handlePresentTime = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    var time = Number(e.target.value);\r\n    props.timeInfo.setPresentTime(time);\r\n\r\n    setPresenters(props.timeInfo.getPresenters());\r\n    setPresentTime(props.timeInfo.getPresentTime());\r\n  }\r\n\r\n  const handleBreakTime = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    var time = Number(e.target.value);\r\n    props.timeInfo.setBreakTime(time);\r\n\r\n    setPresenters(props.timeInfo.getPresenters());\r\n    setBreakTime(props.timeInfo.getBreakTime());\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n      <p>設定項目</p>\r\n      <p>開始時間</p>\r\n      <input type=\"time\" name=\"startTime\" value={( '00' + startHour ).slice( -2 )+':'+( '00' + startMin ).slice( -2 )} onChange={handleStartTime}></input>\r\n      <p>終了時間</p>\r\n      <input type=\"time\" name=\"endTime\" value={( '00' + endHour ).slice( -2 )+':'+( '00' + endMin ).slice( -2 )} onChange={handleEndTime}></input>\r\n      <p>発表人数{numPresenters}人</p>\r\n      <input type=\"number\" name=\"numPresenters\" value={numPresenters} min=\"1\" max=\"20\" onChange={handleNumPresenters}></input>\r\n      {/* <button onClick={()=>{\r\n        props.timeInfo.addNumPresenters(1);\r\n        setNumPresenters(props.timeInfo.getNumPresenters());\r\n        setPresenters(props.timeInfo.getPresenters());\r\n      }}>人数+</button> */}\r\n      <p>発表者</p>\r\n      <div className=\"presenter\"> \r\n        {\r\n          presenters.map((presenter, idx) => {\r\n            if (presenter['name'] === 'break'){ //休憩部分は名前を変えられないように\r\n              return (\r\n                <div className=\"flex\">\r\n                  <button className=\"namebutton\" onClick={() => hundleDeletePresenter(idx)}>x</button>\r\n                  <input type=\"text\" name={\"presenter_\"+(idx)} value={presenter['name']} onChange={handlePresenterName} disabled></input>\r\n                  <button className=\"namebutton\" onClick={() => hundleAddPresenter(idx, false)}>+発表者</button>\r\n                </div>\r\n              )\r\n            }else{\r\n              return (\r\n                <div className=\"flex\">\r\n                  <button className=\"namebutton\" onClick={() => hundleDeletePresenter(idx)}>x</button>\r\n                  <input type=\"text\" name={\"presenter_\"+(idx)} value={presenter['name']} onChange={handlePresenterName}></input>\r\n                  <button className=\"namebutton\" onClick={() => hundleAddPresenter(idx, false)}>+発表者</button>\r\n                  <button className=\"namebutton\" onClick={() => hundleAddPresenter(idx, true)}>+休憩</button>\r\n                </div>\r\n              )\r\n            }\r\n            \r\n          })\r\n        }\r\n        \r\n      </div>\r\n      {/* <button onClick={()=>{\r\n        console.log('CLONE')\r\n        var node = document.getElementsByClassName(\"input\")[0];\r\n        node?.after(node.cloneNode());\r\n      }}>CLONE</button>\r\n      <button onClick={()=>{\r\n        console.log('DELETE')\r\n        var nodes = document.getElementsByClassName(\"input\");\r\n        var node = nodes[nodes.length-1]\r\n        node.remove();\r\n      }}>DELETE</button> */}\r\n      <div>\r\n        <p>各発表時間</p>\r\n        <input type=\"number\" value={presentTime} onChange={handlePresentTime}></input>\r\n      </div>\r\n      <div>\r\n        <p>休憩時間</p>\r\n        <input type=\"number\" value={breakTime} onChange={handleBreakTime}></input>\r\n      </div>\r\n      {/* <button>決定</button> */}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingContents;","import React, { useEffect } from \"react\";\r\nimport SettingContents from \"./SettingContents\";\r\nimport { TimeInfo } from \"../TimeInfo\";\r\nimport Modal from \"react-modal\"; //npm install --save react-modal @types/react-modal でインストール\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\nfunction SettingModal(props: Props){\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={()=>{\r\n          setIsOpen(true)\r\n        }}  \r\n      >\r\n        設定\r\n      </button>\r\n      <Modal isOpen={modalIsOpen}>\r\n        <button\r\n          onClick={()=>{\r\n            setIsOpen(false)\r\n          }}  \r\n        >\r\n          閉じる\r\n        </button>\r\n        <SettingContents \r\n          timeInfo={props.timeInfo}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingModal;","import * as React from 'react';\r\nimport { TimeInfo } from \"../TimeInfo\";\r\n\r\nconst beginposition = 40;\r\nconst endposition = 920;\r\nconst vertical_bar_y_begin = 30;\r\nconst vertical_bar_y_end = 110;\r\nconst nowtime_bar_y_begin = 50;\r\nconst nowtime_bar_y_end = 90;\r\nconst nowtime_bar_x_diff = 20;\r\nvar time:Date;\r\nconst bar_y_position = 70;\r\nconst timetext_y_position = 140;\r\nconst nametext_y_position = 45;\r\nconst nowtimetext_y_position = 110;\r\nconst colors:string[] = ['red', 'blue', 'black', 'green', 'orange'];\r\nvar checksetStartTime:any = null;\r\nvar checksetEndTime:any = null;\r\nvar checksetPresenters:any = null;\r\nvar checkdraw:any = null;\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\nfunction calcBarPosition(starttime:number, endtime:number, times:number[]) {\r\n  var barposition:number[] = new Array(times.length - 1);\r\n  var timelength = endtime - starttime;\r\n  var barlength = endposition - beginposition;\r\n  var sum;\r\n\r\n  for (var i = 0; i < times.length - 1; i++) {\r\n    sum = 0;\r\n    for (var j = 0; j <= i; j++) {\r\n      sum += times[j];\r\n    }\r\n    barposition[i] = beginposition + (barlength * (sum / timelength));\r\n  }\r\n\r\n  return barposition;\r\n}\r\n\r\nfunction calcNowtimePosition(timestr:string, starttime:number, endtime:number) {\r\n  var timelength = endtime - starttime;\r\n  var barlength = endposition - beginposition;\r\n  var second = hourminsecTosec(timestr);\r\n\r\n  return (beginposition + (barlength * ((second - starttime) / timelength)));\r\n}\r\n\r\nfunction secTohourmin(seconds:number) {\r\n  var hour:number = Math.floor(seconds / 3600);\r\n  var min:number = Math.floor((seconds - (hour * 3600)) / 60);\r\n  var hourstr:string;\r\n  var minstr:string;\r\n\r\n  if (hour < 10) {\r\n    hourstr = '0' + String(hour);\r\n  }\r\n  else {\r\n    hourstr = String(hour);\r\n  }\r\n  if (min < 10) {\r\n    minstr = '0' + String(min);\r\n  }\r\n  else {\r\n    minstr = String(min);\r\n  }\r\n\r\n  return (hourstr + ':' + minstr);\r\n}\r\n\r\nfunction hourminsecTosec(time:string) {\r\n  var timestrs = time.split(':');\r\n  var hour:number = Number(timestrs[0]);\r\n  var min:number = Number(timestrs[1]);\r\n  var second:number = Number(timestrs[2]);\r\n\r\n  return ((hour * 3600) + (min * 60) + second);\r\n}\r\n\r\nfunction draw(context:any, canvasRef:any, starttime:number, endtime:number, names:string[], times:number[]) {\r\n  time = new Date();\r\n  if (context) {\r\n    if (canvasRef.current) context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    var barposition = calcBarPosition(starttime, endtime, times);\r\n    context.globalAlpha = 1.0\r\n    context.strokeStyle = 'black';\r\n    context.textAlign = 'center';\r\n    // begin time\r\n    context.beginPath();\r\n    context.moveTo(beginposition, vertical_bar_y_begin);\r\n    context.lineTo(beginposition, vertical_bar_y_end);\r\n    context.stroke();\r\n    context.font = '25px serif';\r\n    context.fillText(names[0], (beginposition + barposition[0]) / 2, nametext_y_position)\r\n    context.font = '30px serif';\r\n    context.fillText(secTohourmin(starttime), beginposition, timetext_y_position)\r\n  \r\n    // end time\r\n    context.beginPath();\r\n    context.moveTo(endposition, vertical_bar_y_begin);\r\n    context.lineTo(endposition, vertical_bar_y_end);\r\n    context.stroke();\r\n    context.font = '25px serif';\r\n    context.fillText(names[names.length - 1], (barposition[barposition.length - 1] + endposition) / 2, nametext_y_position)\r\n    context.font = '30px serif';\r\n    context.fillText(secTohourmin(endtime), endposition, timetext_y_position)\r\n  \r\n    // change time\r\n    for (var i = 0; i < barposition.length + 1; i++) {\r\n      context.strokeStyle = 'black';\r\n      context.beginPath();\r\n      context.moveTo(barposition[i], vertical_bar_y_begin);\r\n      context.lineTo(barposition[i], vertical_bar_y_end);\r\n      context.stroke();\r\n      context.strokeStyle = colors[i];\r\n      context.beginPath();\r\n      if (i == 0) {\r\n        context.moveTo(beginposition, bar_y_position);\r\n      }\r\n      else {\r\n        context.moveTo(barposition[i - 1], bar_y_position);\r\n      }\r\n      if (i < barposition.length - 1) {\r\n        context.lineTo(barposition[i], bar_y_position);\r\n      }\r\n      else {\r\n        context.lineTo(endposition, bar_y_position);\r\n      }\r\n      context.stroke();\r\n      if (i < barposition.length) {\r\n        var sum = 0;\r\n        for (var j = 0; j <= i; j++) sum += times[j];\r\n        if (i > 0) {\r\n          context.font = '25px serif';\r\n          context.fillText(names[i], (barposition[i - 1] + barposition[i]) / 2, nametext_y_position)\r\n        }\r\n        context.font = '30px serif';\r\n        context.fillText(secTohourmin(starttime + sum), barposition[i], timetext_y_position)\r\n      }\r\n    }\r\n  \r\n    // now time\r\n    var timestr = time.toLocaleTimeString([], {hour12:false, hour:'2-digit', minute:'2-digit', second:'2-digit'});\r\n    var nowtimeposition = calcNowtimePosition(timestr, starttime, endtime);\r\n    context.strokeStyle = 'black';\r\n    context.beginPath();\r\n    context.moveTo(nowtimeposition - nowtime_bar_x_diff, nowtime_bar_y_begin);\r\n    context.lineTo(nowtimeposition, bar_y_position);\r\n    context.stroke();\r\n    context.beginPath();\r\n    context.moveTo(nowtimeposition - nowtime_bar_x_diff, nowtime_bar_y_end);\r\n    context.lineTo(nowtimeposition, bar_y_position);\r\n    context.stroke();\r\n    context.font = '20px serif';\r\n    context.fillText(timestr, nowtimeposition, nowtimetext_y_position);\r\n  }\r\n}\r\n\r\nfunction TimeBar(props: Props) {\r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(null);\r\n  const [startTime, setStartTime] = React.useState(props.timeInfo.getStartTime());\r\n  const [endTime, setEndTime] = React.useState(props.timeInfo.getEndTime());\r\n  const [presenters, setPresenters] = React.useState(props.timeInfo.getPresenters());\r\n  var starttime:number;\r\n  var endtime:number;\r\n  var names:string[] = [];\r\n  var times:number[] = [];\r\n\r\n  if (checksetStartTime) clearInterval(checksetStartTime);\r\n  checksetStartTime = setInterval(function(){setStartTime(props.timeInfo.getStartTime())}, 100);\r\n  starttime = hourminsecTosec(startTime.toLocaleTimeString([], {hour12:false, hour:'2-digit', minute:'2-digit', second:'2-digit'}));\r\n\r\n  if (checksetEndTime) clearInterval(checksetEndTime);\r\n  checksetEndTime = setInterval(function(){setEndTime(props.timeInfo.getEndTime())}, 100);\r\n  endtime = hourminsecTosec(endTime.toLocaleTimeString([], {hour12:false, hour:'2-digit', minute:'2-digit', second:'2-digit'}));\r\n\r\n  if (checksetPresenters) clearInterval(checksetPresenters);\r\n  checksetPresenters = setInterval(function(){setPresenters(props.timeInfo.getPresenters())}, 100);\r\n  for (var i = 0; i < presenters.length; i++) {\r\n    names.push(presenters[i].name);\r\n    times.push(presenters[i].time);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      canvasRef.current.style.position = 'absolute';\r\n      canvasRef.current.style.left = '280px';\r\n      canvasRef.current.style.top = '10px';\r\n      if (checkdraw) clearInterval(checkdraw);\r\n      checkdraw = setInterval(function(){draw(context, canvasRef, starttime, endtime, names, times)}, 10);\r\n      const renderCtx = canvasRef.current.getContext('2d');\r\n\r\n      if (renderCtx) {\r\n        setContext(renderCtx);\r\n      }\r\n    }\r\n    draw(context, canvasRef, starttime, endtime, names, times);\r\n  }, [context, startTime, endTime, presenters]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n      }}>\r\n      <canvas\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        width={960}\r\n        height={150}\r\n        style={{\r\n          border: '2px solid #000',\r\n          marginTop: 10,\r\n        }}\r\n      ></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeBar;","import { render } from '@testing-library/react';\r\nimport { time } from 'console';\r\nimport * as React from 'react';\r\n\r\nimport DisplayTime from './DisplayTime';\r\nimport SettingModal from './SettingModal';\r\n\r\nimport TimeBar from './TimeBar';\r\n\r\n\r\nimport { TimeInfo } from '../TimeInfo';\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\nfunction Time(props: Props) {\r\n  \r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      const renderCtx = canvasRef.current.getContext('2d');\r\n\r\n      if (renderCtx) {\r\n        setContext(renderCtx);\r\n      }\r\n    }\r\n\r\n    // if (context) context.fillRect(5, 5, 100, 100);\r\n  }, [context]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      <canvas\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        width={1000}\r\n        height={300}\r\n        style={{\r\n          border: '2px solid #000',\r\n          marginTop: 10,\r\n        }}\r\n      ></canvas>\r\n      <TimeBar timeInfo={props.timeInfo}/>\r\n      <DisplayTime \r\n        timeInfo={props.timeInfo}\r\n      />\r\n      <SettingModal \r\n        timeInfo={props.timeInfo}\r\n      />\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Time;","import React, { useCallback } from \"react\";\r\nimport \"./TabTitle.css\"\r\n\r\ntype TabTitleProps = {\r\n    title: string\r\n    index: number\r\n    setSelectedTab: (index: number) => void\r\n}\r\n\r\nconst TabTitle: React.FC<TabTitleProps> = ({title, setSelectedTab, index}) => {\r\n    const onClick = useCallback(() => {\r\n        setSelectedTab(index)\r\n    }, [setSelectedTab, index])\r\n    \r\n    return(\r\n        <li>\r\n            <button onClick={onClick}>{title}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TabTitle","import React, {ReactElement, useState} from \"react\";\r\n//import Tab from \"./Tab\";\r\nimport TabTitle from \"./TabTitle\";\r\nimport \"./Tabs.css\"\r\n\r\ntype TabsProps = {\r\n    children: ReactElement[]\r\n}\r\n\r\nconst Tabs: React.FC<TabsProps> = ({children}) => {\r\n    const[selectedTab, setSelectedTab] = useState(0)\r\n\r\n    return(\r\n        <div className=\"tabs\">\r\n            <ul className=\"nav\">\r\n                {children.map((item, index) => (\r\n                    <TabTitle \r\n                        key={index}\r\n                        title={item.props.presenter.name}\r\n                        index={index}\r\n                        setSelectedTab={setSelectedTab}/>\r\n                ))}\r\n            </ul>\r\n            {children[selectedTab]}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tabs","import React from \"react\";\r\nimport \"./Tab.css\"\r\nimport {TodayPresenter} from \"../TodayPresenter\"\r\n\r\ntype TabProps = {\r\n    title: string;\r\n}\r\n\r\nconst Tab: React.FC<TabProps> = ({children}) => {\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div className=\"Memo\">{children}</div>\r\n            {/*<div className=\"Memo\"></div>*/}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Tab\r\n","  \r\nimport React, {useState, Children, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport \"./AlignItemsList.css\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n}));\r\n/*\r\nfunction AlignItemsList() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div style={{maxHeight: 200, overflow: 'auto'}}>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText primary=\"Hello World\"/>\r\n                </ListItem>\r\n            </List>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText primary=\"Hello World\"/>\r\n                </ListItem>\r\n            </List>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText primary=\"Hello World\"/>\r\n                </ListItem>\r\n            </List>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText primary=\"Hello World\"/>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n*/\r\ntype AlignItemsListProps = {\r\n    chats: string[]\r\n}\r\n\r\nconst AlignItemsList = (props: AlignItemsListProps) => {\r\n    const[chats, setChats] = useState(props.chats)\r\n    const classes = useStyles();\r\n    //const chats = props.chats\r\n\r\n    return (\r\n        <div style={{maxHeight: 200, overflow: 'auto'}}>\r\n            {chats.map((item, index) => (\r\n                <List className={classes.root}\r\n                    key={index}>\r\n                    <ListItem alignItems=\"flex-start\">\r\n                        <ListItemText primary={item}/>\r\n                    </ListItem>\r\n                    {/*<Divider variant=\"inset\" component=\"li\"/>*/}\r\n                </List>\r\n            ))}\r\n            {/*\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText primary=\"Hello World\"/>\r\n                </ListItem>\r\n            </List>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText primary=\"Hello World\"/>\r\n                </ListItem>\r\n            </List>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText primary=\"Hello World\"/>\r\n                </ListItem>\r\n            </List>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText primary=\"Hello World\"/>\r\n                </ListItem>\r\n            </List>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlignItemsList;","import React from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    leftIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    iconSmall: {\r\n        fontSize: 14,\r\n    },\r\n}));\r\n/*\r\nfunction SendButton() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n            <Icon>send</Icon>\r\n        </Button>\r\n    );\r\n}*/\r\ntype SendButtonProps = {\r\n    onSendButtonClick:(e: any) => void;\r\n}\r\n\r\nconst SendButton = (props:SendButtonProps) => {\r\n    const classes = useStyles();\r\n\r\n    const handleSendClick = (e: any) => {\r\n        props.onSendButtonClick(e);\r\n    }\r\n    return (\r\n        <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            className={classes.button}\r\n            onClick={handleSendClick}>\r\n            <Icon>send</Icon>\r\n        </Button>\r\n    );\r\n}\r\nexport default SendButton;","import React, {Component} from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./TextInput.css\"\r\nimport SendButton from './SendButton';\r\nimport { isPropertySignature } from \"typescript\";\r\n/*\r\nclass TextInput extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <form className=\"wrap\" noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        id = \"standard-text\"\r\n                        label=\"メッセージを入力\"\r\n                        className=\"text\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <SendButtons />\r\n                </form>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n*/\r\n\r\ntype TextInputProps = {\r\n    //chat: string;\r\n    onChatChange: (chat: string) => void;\r\n    onButtonClick: (e: any) => void;\r\n};\r\n\r\nconst TextInput = (props:TextInputProps) => {\r\n    const handleSendButtonClick = (e: any) => {\r\n        props.onButtonClick(e)\r\n        //console.log(e)\r\n    }\r\n\r\n    const handleChatChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.onChatChange(e.target.value);\r\n        //console.log(e.target.value)\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <form className=\"wrap\" noValidate autoComplete=\"off\">\r\n                <TextField\r\n                    id = \"standard-text\"\r\n                    label=\"メッセージを入力\"\r\n                    className=\"text\"\r\n                    margin=\"normal\"\r\n                    onChange={handleChatChange}\r\n                />\r\n                <SendButton \r\n                    onSendButtonClick={(e) => handleSendButtonClick(e)}/>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TextInput;","import React, {useState, Component, useEffect} from \"react\";\r\nimport { isPropertySignature } from \"typescript\";\r\n\r\n//import {connect} from 'react-redux'\r\n\r\nimport AlignItemsList from \"./AlignItemsList\";\r\nimport TextInput from \"./TextInput\";\r\n\r\n/*class ChatArea extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"Chat\">\r\n                    <AlignItemsList/>\r\n                    <TextInput/>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}*/\r\ntype ChatAreaProps = {\r\n    chats: string[];\r\n}\r\n\r\nconst ChatArea = (props:ChatAreaProps) => {\r\n    //const chats = props.chats\r\n    const[chats, setChats] = useState(props.chats);\r\n    //boolean型のstateを作成\r\n    const [update,setUpdata]=useState<boolean>(false)\r\n    let newchat: string;\r\n    const handleChatChange = (chat: string) => {\r\n        newchat = chat\r\n        //console.log(newchat)\r\n    }\r\n\r\n    const handleButtonClick = () => {\r\n        const newChats = chats\r\n        newChats.push(newchat)\r\n        setChats(newChats)\r\n\r\n        //レンダリングしたい場所でこれを差し込むだけ\r\n        setUpdata(update?false:true)\r\n        console.log(props.chats)\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"Chat\">\r\n                <AlignItemsList\r\n                    chats = {chats}\r\n                    />\r\n                <TextInput\r\n                    onChatChange={handleChatChange}\r\n                    onButtonClick={handleButtonClick}/>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ChatArea","import React from \"react\";\r\nimport { TodayPresenter } from \"./TodayPresenter\";\r\nimport Tab from \"./Tabs/Tab\"\r\nimport \"./PresenterTab.css\"\r\nimport ChatArea from \"./Tabs/Chat/ChatArea\";\r\n\r\ntype PresenterTabProps = {\r\n    presenter: TodayPresenter;\r\n    onMemoChange: (id: number, memo: string) => void;\r\n};\r\n\r\nconst PresenterTab = (props:PresenterTabProps) => {\r\n    const {name, memo, chats} = props.presenter;\r\n\r\n    const handleMemoChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.onMemoChange(props.presenter.id, e.target.value);\r\n    };\r\n\r\n    return(\r\n        <div className=\"presenter-tab\">\r\n            <Tab title=\"a\">\r\n                <div className=\"box\">\r\n                <div className=\"field\">\r\n                    <textarea\r\n                        //type=\"text\"\r\n                        className=\"memo\"\r\n                        value={memo}\r\n                        onChange={handleMemoChange}\r\n                    />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <ChatArea\r\n                        chats={chats}/*value={chats}*/\r\n                    />\r\n                </div>\r\n                </div>\r\n            </Tab>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PresenterTab;\r\n","import React, {useState} from \"react\";\r\nimport Tabs from \"./Tabs/Tabs\"\r\nimport Tab from \"./Tabs/Tab\"\r\nimport Memo from \"./Memo\";\r\nimport { TodayPresenter } from \"./TodayPresenter\";\r\nimport PresenterTab from \"./PresenterTab\"\r\n\r\nimport {TimeInfo} from \"../TimeInfo\";\r\n//function SampleMemo() {\r\n\r\nconst dummyPresenters: TodayPresenter[] = [\r\n    {\r\n        id: 1,\r\n        name: \"A\",\r\n        memo: \"\",\r\n        chats: [\"こんにちは！a\", \"aさん\", \"遊びましょう！\", \"今度また～\"],\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"B\",\r\n        memo: \"\",\r\n        chats: [\"こんにちは！b\"],\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"C\",\r\n        memo: \"\",\r\n        chats: [\"\"],\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"D\",\r\n        memo: \"\",\r\n        chats: [\"\"],\r\n    },\r\n];\r\n\r\ntype MemoAreaProps = {\r\n    presenters: string[];\r\n    presenterNum: number;\r\n}\r\n\r\nconst MemoArea = (props: MemoAreaProps) => {\r\n    //const[presenters, setPresenters] = useState(dummyPresenters);\r\n    var dummypresenters: TodayPresenter[] = new Array(props.presenterNum)\r\n    for(var i = 0; i < props.presenterNum;i++) {\r\n        dummypresenters[i] = {id:i,name:props.presenters[i],memo:\"\",chats:[\"\"]}\r\n    }\r\n    const[presenters, setPresenters] = useState(dummypresenters)\r\n    \r\n    const handleMemoChange = (id: number, memo: string) => {\r\n        const newPresenters = presenters.map((p) => {\r\n            return p.id === id\r\n                ? {...p, memo:memo}\r\n                :p;\r\n        });\r\n        setPresenters(newPresenters);\r\n    };\r\n\r\n    const presenterTabs = presenters.map((p) => {\r\n        return(\r\n            <PresenterTab\r\n                presenter={p}\r\n                key={p.id}\r\n                onMemoChange={(id, memo) => handleMemoChange(id, memo)}\r\n                //onMemoChange={(id, memo) => {}}\r\n            />\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div>\r\n            <Tabs>\r\n                {presenterTabs}\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MemoArea;","import { render } from '@testing-library/react';\r\nimport * as React from 'react';\r\n//import PrivateMemo from './PrivateMemo';\r\nimport MemoArea from './MemoArea';\r\nimport {TimeInfo} from '../TimeInfo'\r\n\r\ntype MemoProps = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\nfunction Memo(props: MemoProps) {\r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(null);\r\n\r\n  const presenter = props.timeInfo.getPresenters()\r\n  const presenterNum = props.timeInfo.getNumPresenters()\r\n  var presenters:string[] = new Array(presenterNum)\r\n\r\n  for(var i = 0; i < presenterNum; i++) {\r\n    presenters[i] = presenter[i].name\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      const renderCtx = canvasRef.current.getContext('2d');\r\n\r\n      if (renderCtx) {\r\n        setContext(renderCtx);\r\n      }\r\n    }\r\n\r\n    // if (context) context.fillRect(5, 5, 100, 100);\r\n  }, [context]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n      }}>\r\n        <div className=\"content\">\r\n            <MemoArea\r\n              presenters={presenters}\r\n              presenterNum={presenterNum}/>\r\n            {/*<PrivateMemo/>*/}\r\n          </div>\r\n      {/*<canvas\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        width={1000}\r\n        height={500}\r\n        style={{\r\n          border: '2px solid #000',\r\n          marginTop: 10,\r\n        }}\r\n      >\r\n        \r\n      </canvas>*/}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Memo;","import { time } from \"console\";\r\n\r\ntype Presenter = {\r\n  name: string;\r\n  time: number;\r\n}\r\n\r\nexport class TimeInfo{\r\n\r\n  private startTime: Date = new Date();\r\n  private endTime: Date  = new Date();\r\n  private numPresenters: number = 1;\r\n  private presenters: Presenter[] = new Array(this.numPresenters).fill({name: '', time: 0});\r\n  private nowPresenterIndex = -1;\r\n  private presentTime = 0;\r\n  private breakTime = 0;\r\n\r\n  constructor(){\r\n    this.startTime.setHours(13);\r\n    this.endTime.setHours(16);\r\n    this.numPresenters = 5;\r\n    this.presenters = [\r\n      {name:'abc', time:10},\r\n      {name:'def', time:1500},\r\n      {name:'break', time:600},\r\n      {name:'ghi', time:1500},\r\n      {name:'jkl', time:1500}];\r\n  }\r\n\r\n  getStartTime(){\r\n    return this.startTime;\r\n  }\r\n\r\n  getEndTime(){\r\n    return this.endTime;\r\n  }\r\n  \r\n  setStartTime(startTime: Date){\r\n    this.startTime = startTime;\r\n  }\r\n\r\n  setEndTime(endTime: Date){\r\n    this.endTime = endTime;\r\n  }\r\n\r\n  getNumPresenters(){\r\n    return this.numPresenters;\r\n  }\r\n\r\n  setNumPresenters(num: number){\r\n    this.numPresenters = this.presenters.length;\r\n    if(num >= 1){\r\n      if (num > this.presenters.length) {\r\n        for(var i=0; i<num-this.presenters.length; i++){\r\n          this.addPresenter(this.presenters.length, '', 0);\r\n        }\r\n      }else if(num < this.presenters.length){\r\n        for(var i=0; i<this.presenters.length-num; i++){\r\n          this.deletePresenter(this.presenters.length-1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  addNumPresenters(num: number){\r\n    this.numPresenters = this.presenters.length;\r\n    if(this.numPresenters + num >= 1){\r\n      if (num > 0) {\r\n        for(var i=0; i<num; i++){\r\n          this.addPresenter(this.presenters.length, '', 0);\r\n        }\r\n      }else if(num < 0){\r\n        for(var i=0; i<-num; i++){\r\n          this.deletePresenter(this.presenters.length-1);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.endTime.setSeconds(this.endTime.getSeconds() + 60);\r\n    this.endTime = new Date(this.endTime);\r\n  }\r\n\r\n  getPresenters(){\r\n    return this.presenters;\r\n  }\r\n\r\n  setPresenters(presenters: Presenter[]){\r\n    this.presenters = presenters;\r\n  }\r\n\r\n  deletePresenter(idx: number){\r\n    this.presenters = this.presenters.slice(0, idx).concat(this.presenters.slice(idx+1, this.presenters.length));\r\n    this.numPresenters -= 1;\r\n  }\r\n\r\n  addPresenter(idx: number, name: string, time: number){\r\n    this.presenters.splice(idx, 0, {name: name, time: time});\r\n    this.numPresenters += 1;\r\n  }\r\n\r\n  getNowPresenterIndex(){\r\n    return this.nowPresenterIndex;\r\n  }\r\n\r\n  toNextPresenter(prevTime: number){\r\n    if(this.nowPresenterIndex >= 0){\r\n      this.presenters[this.nowPresenterIndex]['time'] = prevTime; //実際に発表にかかった時間に更新\r\n    }\r\n\r\n    this.nowPresenterIndex += 1;\r\n    return this.presenters[this.nowPresenterIndex]['time'];\r\n  }\r\n\r\n  getPresentTime(){\r\n    return this.presentTime;\r\n  }\r\n\r\n  setPresentTime(num: number){\r\n    this.presentTime = num;\r\n    for(const presenter of this.presenters){\r\n      if(presenter['name'] !== 'break') presenter['time'] = num * 60;\r\n    }\r\n  }\r\n\r\n  getNowPresentDate(){\r\n    // 今の発表者の終わり時間を計算\r\n    var sec = 0;\r\n    for(var i=0; i<this.nowPresenterIndex; i++){\r\n      sec += this.presenters[i]['time'];\r\n    }\r\n    const nowPresenterStartDate = new Date();\r\n    nowPresenterStartDate.setSeconds(this.startTime.getSeconds() + sec);\r\n    const nowPresenterEndDate = new Date();\r\n    nowPresenterEndDate.setSeconds(this.startTime.getSeconds() + sec + this.presenters[this.nowPresenterIndex]['time']);\r\n\r\n    return [nowPresenterStartDate, nowPresenterEndDate];\r\n  }\r\n\r\n  getBreakTime(){\r\n    return this.breakTime;\r\n  }\r\n\r\n  setBreakTime(num: number){\r\n    this.breakTime = num;\r\n    for(const presenter of this.presenters){\r\n      if(presenter['name'] === 'break') presenter['time'] = num * 60;\r\n    }\r\n  }\r\n\r\n  getPresenterList(){\r\n    var presenterlist = [];\r\n    for (const presenter of this.presenters){\r\n      presenterlist.push(presenter['name']);\r\n    }\r\n    return presenterlist;\r\n  }\r\n\r\n  setPresenterList(presenterlist: string[]){\r\n    for (var i=0; i < this.presenters.length; i++){\r\n      this.presenters[i]['name'] = presenterlist[i];\r\n    }\r\n  }\r\n\r\n  getTimeSetting(){\r\n    var timesetting = [];\r\n    for (const presenter of this.presenters){\r\n      timesetting.push(presenter['time']);\r\n    }\r\n    return timesetting;\r\n  }\r\n\r\n  setTimeSetting(timesetting: number[]){\r\n    for (var i=0; i < this.presenters.length; i++){\r\n      this.presenters[i]['time'] = timesetting[i];\r\n    }\r\n  }\r\n\r\n  sendTimeInfo(){\r\n    const message = {\r\n      messagetype: \"setting\",\r\n      presenterlist: this.getPresenterList(),\r\n      starttime: this.startTime,\r\n      endtime: this.endTime,\r\n      presenttime: this.presentTime,\r\n      breaktime: this.breakTime,\r\n    }\r\n  }\r\n\r\n  sendChangePresenter(){\r\n    const message = {\r\n      messagetype: \"\",\r\n      nextpresenter: this.nowPresenterIndex,\r\n      timesetting: this.getTimeSetting(),\r\n    }\r\n  }\r\n\r\n}","import { EventEmitter } from \"events\";\r\n\r\nexport default class Socket {\r\n  private ws;\r\n  private ee;\r\n\r\n  constructor(ws: WebSocket, ee = new EventEmitter()) {\r\n    this.ws = ws;\r\n    this.ee = ee;\r\n    ws.onmessage = this.message.bind(this);\r\n    ws.onopen = this.open.bind(this);\r\n    ws.onclose = this.close.bind(this);\r\n    ws.onerror = this.error.bind(this);\r\n  }\r\n\r\n  on(name:string, fn:any) {\r\n    this.ee.on(name, fn);\r\n  }\r\n\r\n  off(name:string, fn:any) {\r\n    this.ee.removeListener(name, fn);\r\n  }\r\n\r\n  open() {\r\n    this.ee.emit(\"connect\");\r\n  }\r\n\r\n  close() {\r\n    this.ee.emit(\"disconnect\");\r\n  }\r\n\r\n  error(e:any) {\r\n    console.log(\"websocket error: \", e);\r\n  }\r\n\r\n  emit(data:any) {\r\n    this.ws.send(data)\r\n  }\r\n\r\n  message(e:any) {\r\n    try {\r\n      this.ee.emit(\"message\", e);\r\n\r\n    } catch (err) {\r\n      this.ee.emit(\"error\", err);\r\n      console.log(Date().toString() + \": \", err);\r\n    }\r\n  }\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Time from './Time/Time';\r\nimport Memo from './Memo/Memo';\r\nimport { TimeInfo } from './TimeInfo';\r\nimport Socket from './WebSocket';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst timeInfo = new TimeInfo();\r\n\r\n// let ws = new WebSocket(\"ws://localhost:1323/ws\");\r\nlet ws = new WebSocket(\"wss://warm-gorge-29708.herokuapp.com/ws\");\r\nlet socket = new Socket(ws);\r\nsocket.on(\"message\", receiveMessage);\r\nfunction receiveMessage(e:any){\r\n  let message = JSON.parse(e.data);\r\n  console.log(message);\r\n  \r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Time timeInfo={timeInfo}/>\r\n    <Memo timeInfo={timeInfo}/>\r\n    <button onClick={()=>{\r\n      // var message = \"React!\";\r\n      var message = {messagetype:\"memo\", message:\"React!\"};\r\n      var mes_json = JSON.stringify(message);\r\n      console.log(mes_json);\r\n      socket.emit(mes_json);\r\n    }}>\r\n      送信\r\n    </button>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}