{"version":3,"sources":["Time/DisplayTime.tsx","Time/SettingContents.tsx","Time/SettingModal.tsx","Time/TimeBar.tsx","Time/Time.tsx","Memo/Tabs/TabTitle.tsx","Memo/Tabs/Tabs.tsx","Memo/Tabs/Tab.tsx","Memo/Tabs/Chat/AlignItemsList.tsx","Memo/Tabs/Chat/SendButton.tsx","Memo/Tabs/Chat/TextInput.tsx","Memo/Tabs/Chat/ChatArea.tsx","Memo/PresenterTab.tsx","Memo/MemoArea.tsx","Memo/Memo.tsx","TimeInfo.tsx","WebSocket.tsx","reportWebVitals.ts","index.tsx"],"names":["DisplayTime","props","expiryTimestamp","useTimer","onExpire","console","warn","seconds","minutes","hours","restart","days","isRunning","start","pause","resume","useEffect","sec","endTime","time","Date","setSeconds","getSeconds","className","style","fontSize","onClick","SettingContents","useState","timeInfo","getStartTime","getHours","startHour","setStartHour","getMinutes","startMin","setStartMin","getEndTime","endHour","setEndHour","endMin","setEndMin","getNumPresenters","numPresenters","setNumPresenters","type","name","value","onChange","e","target","split","map","Number","h","min","startTime","setHours","setMinutes","setStartTime","setEndTime","n","addNumPresenters","log","node","document","getElementsByClassName","after","cloneNode","nodes","length","remove","Modal","setAppElement","SettingModal","React","modalIsOpen","setIsOpen","isOpen","beginposition","endposition","bar_y_position","colors","checksetStartTime","checksetEndTime","checksetPresenters","checkdraw","secTohourmin","hour","Math","floor","String","hourminsecTosec","timestrs","draw","context","canvasRef","starttime","endtime","names","times","current","clearRect","width","height","barposition","sum","Array","timelength","i","j","calcBarPosition","globalAlpha","strokeStyle","textAlign","beginPath","moveTo","lineTo","stroke","font","fillText","timestr","toLocaleTimeString","hour12","minute","second","nowtimeposition","calcNowtimePosition","TimeBar","setContext","getPresenters","presenters","setPresenters","clearInterval","setInterval","push","position","left","top","renderCtx","getContext","id","ref","border","marginTop","Time","TabTitle","title","setSelectedTab","index","useCallback","Tabs","children","selectedTab","item","presenter","Tab","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","inline","display","AlignItemsList","chats","classes","maxHeight","overflow","List","ListItem","alignItems","ListItemText","primary","button","margin","spacing","leftIcon","marginRight","iconSmall","SendButton","Button","variant","color","onSendButtonClick","Icon","TextInput","Fragment","noValidate","autoComplete","TextField","label","onChatChange","onButtonClick","handleSendButtonClick","ChatArea","newchat","setChats","update","setUpdata","chat","newChats","PresenterTab","memo","onMemoChange","MemoArea","dummypresenters","presenterNum","presenterTabs","p","newPresenters","handleMemoChange","Memo","TimeInfo","this","breakTime","interbal","num","Socket","ws","ee","EventEmitter","onmessage","message","bind","onopen","open","onclose","close","onerror","error","fn","on","removeListener","emit","data","send","err","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","socket","WebSocket","JSON","parse","ReactDOM","render","StrictMode","mes_json","stringify","messagetype","getElementById"],"mappings":"yWAiEeA,MA9Cf,SAAsBC,EAAtB,GAAwF,IAAlDC,EAAiD,EAAjDA,gBAEpC,EAUIC,mBAAS,CACXD,kBACAE,SAAU,kBAAMC,QAAQC,KAAK,sBAX7BC,EADF,EACEA,QACAC,EAFF,EAEEA,QACAC,EAHF,EAGEA,MAMAC,GATF,EAIEC,KAJF,EAKEC,UALF,EAMEC,MANF,EAOEC,MAPF,EAQEC,OARF,EASEL,SAcF,OARAM,qBAAU,WAER,IAAMC,EAA0B,KAApBhB,EAAMiB,QAAQT,MAAmC,GAAtBR,EAAMiB,QAAQV,QAAaP,EAAMiB,QAAQX,QAC1EY,EAAO,IAAIC,KACjBD,EAAKE,WAAWF,EAAKG,aAAeL,GACpCP,EAAQS,KACP,CAAClB,EAAMiB,UAGR,sBAAyCK,UAAU,OAAnD,UACE,sBAAKC,MAAO,CAAEC,SAAU,QAAxB,UACE,+BAAOhB,IADT,IACuB,+BAAOD,IAD9B,IAC8C,+BAAOD,OAErD,wBAAQgB,UAAU,SAChBG,QAAS,WAEP,IAAMT,EAA0B,KAApBhB,EAAMiB,QAAQT,MAAmC,GAAtBR,EAAMiB,QAAQV,QAAaP,EAAMiB,QAAQX,QAC1EY,EAAO,IAAIC,KACjBD,EAAKE,WAAWF,EAAKG,aAAeL,GACpCP,EAAQS,IANZ,8BCmDSQ,MA5Ff,SAAyB1B,GAEvB,MAAkC2B,mBAAS3B,EAAM4B,SAASC,eAAeC,YAAzE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCL,mBAAS3B,EAAM4B,SAASC,eAAeI,cAAvE,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BR,mBAAS3B,EAAM4B,SAASQ,aAAaN,YAAnE,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA4BX,mBAAS3B,EAAM4B,SAASQ,aAAaH,cAAjE,mBAAOM,EAAP,KAAeC,EAAf,KACA,EAA0Cb,mBAAS3B,EAAM4B,SAASa,oBAAlE,mBAAOC,EAAP,KAAsBC,EAAtB,KAmDA,OACE,gCACE,yDACA,yDACA,uBAAOC,KAAK,OAAOC,KAAK,YAAYC,MAAOf,EAAU,IAAIG,EAAUa,SA3C/C,SAACC,GACvB,IAAI,EAAWA,EAAEC,OAAOH,MAAMI,MAAM,KAAKC,IAAIC,QAA7C,mBAAKC,EAAL,KAAQC,EAAR,KAGIC,EAAY,IAAIpC,KACpBoC,EAAUC,SAASH,GACnBE,EAAUE,WAAWH,GACrBtD,EAAM4B,SAAS8B,aAAaH,GAE5BvB,EAAaqB,GACblB,EAAYmB,MAkCV,yDACA,uBAAOV,KAAK,OAAOC,KAAK,UAAUC,MAAOT,EAAQ,IAAIE,EAAQQ,SAhC3C,SAACC,GACrB,IAAI,EAAWA,EAAEC,OAAOH,MAAMI,MAAM,KAAKC,IAAIC,QAA7C,mBAAKC,EAAL,KAAQC,EAAR,KAGIrC,EAAU,IAAIE,KAClBF,EAAQuC,SAASH,GACjBpC,EAAQwC,WAAWH,GACnBtD,EAAM4B,SAAS+B,WAAW1C,GAE1BqB,EAAWe,GACXb,EAAUc,MAuBR,yDAAQZ,EAAR,YACA,uBAAOE,KAAK,SAASC,KAAK,gBAAgBC,MAAOJ,EAAeY,IAAI,IAAIP,SArBhD,SAACC,GAC3B,IAAIY,EAAIR,OAAOJ,EAAEC,OAAOH,OACxB9C,EAAM4B,SAASe,iBAAiBiB,GAEhCjB,EAAiBiB,MAkBf,wBAAQnC,QAAS,WACfzB,EAAM4B,SAASiC,iBAAiB,GAChCzD,QAAQ0D,IAAI9D,EAAM4B,SAASc,eAC3BC,EAAiB3C,EAAM4B,SAASa,qBAHlC,2BAKA,uBAAOG,KAAK,OAAOtB,UAAU,QAAQuB,KAAK,YAAYE,SAlBlC,SAACC,GACZA,EAAEC,OAAOH,SAkBlB,wBAAQrB,QAAS,WACfrB,QAAQ0D,IAAI,SACZ,IAAIC,EAAOC,SAASC,uBAAuB,SAAS,GAChD,OAAJF,QAAI,IAAJA,KAAMG,MAAMH,EAAKI,cAHnB,mBAKA,wBAAQ1C,QAAS,WACfrB,QAAQ0D,IAAI,UACZ,IAAIM,EAAQJ,SAASC,uBAAuB,SACjCG,EAAMA,EAAMC,OAAO,GACzBC,UAJP,oBAMA,+DACA,uBAAO1B,KAAK,WACZ,yDACA,uBAAOA,KAAK,e,iBCzFlB2B,IAAMC,cAAc,SAkCLC,IC7BXvD,ED6BWuD,EA5Bf,SAAsBzE,GACpB,MAAiC0E,IAAM/C,UAAS,GAAhD,mBAAOgD,EAAP,KAAoBC,EAApB,KAEA,OACE,gCACE,wBACEnD,QAAS,WACPmD,GAAU,IAFd,0BAOA,eAAC,IAAD,CAAOC,OAAQF,EAAf,UACE,wBACElD,QAAS,WACPmD,GAAU,IAFd,gCAOA,cAAC,EAAD,CACEhD,SAAU5B,EAAM4B,kBC7BpBkD,EAAgB,GAChBC,EAAc,IAOdC,EAAiB,GAIjBC,EAAkB,CAAC,MAAO,OAAQ,QAAS,QAAS,UACtDC,EAAwB,KACxBC,EAAsB,KACtBC,EAAyB,KACzBC,EAAgB,KA+BpB,SAASC,EAAahF,GACpB,IAAIiF,EAAcC,KAAKC,MAAMnF,EAAU,MACnCgD,EAAakC,KAAKC,OAAOnF,EAAkB,KAAPiF,GAAgB,IAiBxD,OAbIA,EAAO,GACC,IAAMG,OAAOH,GAGbG,OAAOH,IASD,KAPdjC,EAAM,GACC,IAAMoC,OAAOpC,GAGboC,OAAOpC,IAMpB,SAASqC,EAAgBzE,GACvB,IAAI0E,EAAW1E,EAAKgC,MAAM,KAK1B,OAAgB,KAJEE,OAAOwC,EAAS,IAIH,GAHdxC,OAAOwC,EAAS,IACbxC,OAAOwC,EAAS,IAKtC,SAASC,EAAKC,EAAaC,EAAeC,EAAkBC,EAAgBC,EAAgBC,GAE1F,GADAjF,EAAO,IAAIC,KACP2E,EAAS,CACPC,EAAUK,SAASN,EAAQO,UAAU,EAAG,EAAGN,EAAUK,QAAQE,MAAOP,EAAUK,QAAQG,QAC1F,IAAIC,EA5DR,SAAyBR,EAAkBC,EAAgBE,GAMzD,IALA,IAGIM,EAHAD,EAAuB,IAAIE,MAAMP,EAAM9B,OAAS,GAChDsC,EAAaV,EAAUD,EAIlBY,EAAI,EAAGA,EAAIT,EAAM9B,OAAS,EAAGuC,IAAK,CACzCH,EAAM,EACN,IAAK,IAAII,EAAI,EAAGA,GAAKD,EAAGC,IACtBJ,GAAON,EAAMU,GAEfL,EAAYI,GAAK9B,EAA8B2B,EAAME,EARvC5B,IAWhB,OAAOyB,EA8CaM,CAAgBd,EAAWC,EAASE,GACtDL,EAAQiB,YAAc,EACtBjB,EAAQkB,YAAc,QACtBlB,EAAQmB,UAAY,SAEpBnB,EAAQoB,YACRpB,EAAQqB,OAAOrC,EAtFU,IAuFzBgB,EAAQsB,OAAOtC,EAtFQ,KAuFvBgB,EAAQuB,SACRvB,EAAQwB,KAAO,aACfxB,EAAQyB,SAASrB,EAAM,IAAKpB,EAAgB0B,EAAY,IAAM,EAlFtC,IAmFxBV,EAAQwB,KAAO,aACfxB,EAAQyB,SAASjC,EAAaU,GAAYlB,EArFlB,KAwFxBgB,EAAQoB,YACRpB,EAAQqB,OAAOpC,EAhGU,IAiGzBe,EAAQsB,OAAOrC,EAhGQ,KAiGvBe,EAAQuB,SACRvB,EAAQwB,KAAO,aACfxB,EAAQyB,SAASrB,EAAMA,EAAM7B,OAAS,IAAKmC,EAAYA,EAAYnC,OAAS,GAAKU,GAAe,EA5FxE,IA6FxBe,EAAQwB,KAAO,aACfxB,EAAQyB,SAASjC,EAAaW,GAAUlB,EA/FhB,KAkGxB,IAAK,IAAI6B,EAAI,EAAGA,EAAIJ,EAAYnC,OAAS,EAAGuC,IAqB1C,GApBAd,EAAQkB,YAAc,QACtBlB,EAAQoB,YACRpB,EAAQqB,OAAOX,EAAYI,GA5GJ,IA6GvBd,EAAQsB,OAAOZ,EAAYI,GA5GN,KA6GrBd,EAAQuB,SACRvB,EAAQkB,YAAc/B,EAAO2B,GAC7Bd,EAAQoB,YACC,GAALN,EACFd,EAAQqB,OAAOrC,EAAeE,GAG9Bc,EAAQqB,OAAOX,EAAYI,EAAI,GAAI5B,GAEjC4B,EAAIJ,EAAYnC,OAAS,EAC3ByB,EAAQsB,OAAOZ,EAAYI,GAAI5B,GAG/Bc,EAAQsB,OAAOrC,EAAaC,GAE9Bc,EAAQuB,SACJT,EAAIJ,EAAYnC,OAAQ,CAE1B,IADA,IAAIoC,EAAM,EACDI,EAAI,EAAGA,GAAKD,EAAGC,IAAKJ,GAAON,EAAMU,GACtCD,EAAI,IACNd,EAAQwB,KAAO,aACfxB,EAAQyB,SAASrB,EAAMU,IAAKJ,EAAYI,EAAI,GAAKJ,EAAYI,IAAM,EA3HjD,KA6HpBd,EAAQwB,KAAO,aACfxB,EAAQyB,SAASjC,EAAaU,EAAYS,GAAMD,EAAYI,GA/HxC,KAoIxB,IAAIY,EAAUtG,EAAKuG,mBAAmB,GAAI,CAACC,QAAO,EAAOnC,KAAK,UAAWoC,OAAO,UAAWC,OAAO,YAC9FC,EAvGR,SAA6BL,EAAgBxB,EAAkBC,GAC7D,IAAIU,EAAaV,EAAUD,EAEvB4B,EAASjC,EAAgB6B,GAE7B,OAAQ1C,GAA+B8C,EAAS5B,GAAaW,EAH7C5B,IAqGQ+C,CAAoBN,EAASxB,EAAWC,GAC9DH,EAAQkB,YAAc,QACtBlB,EAAQoB,YACRpB,EAAQqB,OAAOU,EA3IQ,GAFC,IA8IxB/B,EAAQsB,OAAOS,EAAiB7C,GAChCc,EAAQuB,SACRvB,EAAQoB,YACRpB,EAAQqB,OAAOU,EA/IQ,GADD,IAiJtB/B,EAAQsB,OAAOS,EAAiB7C,GAChCc,EAAQuB,SACRvB,EAAQwB,KAAO,aACfxB,EAAQyB,SAASC,EAASK,EA9IC,MA+MhBE,MA7Df,SAAiB/H,GACf,IAKIgG,EACAC,EANEF,EAAYrB,SAAgC,MAClD,EAA8BA,WAAgD,MAA9E,mBAAOoB,EAAP,KAAgBkC,EAAhB,KACA,EAAkCtD,WAAe1E,EAAM4B,SAASC,gBAAhE,mBAAO0B,EAAP,KAAkBG,EAAlB,KACA,EAA8BgB,WAAe1E,EAAM4B,SAASQ,cAA5D,mBAAOnB,EAAP,KAAgB0C,EAAhB,KACA,EAAoCe,WAAe1E,EAAM4B,SAASqG,iBAAlE,mBAAOC,EAAP,KAAmBC,EAAnB,KAGIjC,EAAiB,GACjBC,EAAiB,GAEjBjB,GAAmBkD,cAAclD,GACrCA,EAAoBmD,aAAY,WAAW3E,EAAa1D,EAAM4B,SAASC,kBAAkB,KACzFmE,EAAYL,EAAgBpC,EAAUkE,mBAAmB,GAAI,CAACC,QAAO,EAAOnC,KAAK,UAAWoC,OAAO,UAAWC,OAAO,aAEjHzC,GAAiBiD,cAAcjD,GACnCA,EAAkBkD,aAAY,WAAW1E,EAAW3D,EAAM4B,SAASQ,gBAAgB,KACnF6D,EAAUN,EAAgB1E,EAAQwG,mBAAmB,GAAI,CAACC,QAAO,EAAOnC,KAAK,UAAWoC,OAAO,UAAWC,OAAO,aAE7GxC,GAAoBgD,cAAchD,GACtCA,EAAqBiD,aAAY,WAAWF,EAAcnI,EAAM4B,SAASqG,mBAAmB,KAC5F,IAAK,IAAIrB,EAAI,EAAGA,EAAIsB,EAAW7D,OAAQuC,IACrCV,EAAMoC,KAAKJ,EAAWtB,GAAG/D,MACzBsD,EAAMmC,KAAKJ,EAAWtB,GAAG1F,MAmB3B,OAhBAwD,aAAgB,WACd,GAAIqB,EAAUK,QAAS,CACrBL,EAAUK,QAAQ7E,MAAMgH,SAAW,WACnCxC,EAAUK,QAAQ7E,MAAMiH,KAAO,QAC/BzC,EAAUK,QAAQ7E,MAAMkH,IAAM,OAC1BpD,GAAW+C,cAAc/C,GAC7BA,EAAYgD,aAAY,WAAWxC,EAAKC,EAASC,EAAWC,EAAWC,EAASC,EAAOC,KAAS,IAChG,IAAMuC,EAAY3C,EAAUK,QAAQuC,WAAW,MAE3CD,GACFV,EAAWU,GAGf7C,EAAKC,EAASC,EAAWC,EAAWC,EAASC,EAAOC,KACnD,CAACL,EAASvC,EAAWtC,EAASiH,IAG/B,qBACE3G,MAAO,CACL0F,UAAW,UAFf,SAIE,wBACE2B,GAAG,SACHC,IAAK9C,EACLO,MAAO,IACPC,OAAQ,IACRhF,MAAO,CACLuH,OAAQ,iBACRC,UAAW,SC1JNC,MA5Cf,SAAchJ,GAEZ,IAAM+F,EAAYrB,SAAgC,MAClD,EAA8BA,WAAgD,MAA9E,mBAAOoB,EAAP,KAAgBkC,EAAhB,KAcA,OAZAtD,aAAgB,WACd,GAAIqB,EAAUK,QAAS,CACrB,IAAMsC,EAAY3C,EAAUK,QAAQuC,WAAW,MAE3CD,GACFV,EAAWU,MAKd,CAAC5C,IAGF,sBACEvE,MAAO,CACL0F,UAAW,UAFf,UAIE,wBACE2B,GAAG,SACHC,IAAK9C,EACLO,MAAO,IACPC,OAAQ,IACRhF,MAAO,CACLuH,OAAQ,iBACRC,UAAW,MAGf,cAAC,EAAD,CAASnH,SAAU5B,EAAM4B,WACzB,cAAC,EAAD,CACEX,QAAS,CAACX,QAAQ,EAAGC,QAAQ,GAAIC,MAAM,KAEzC,cAAC,EAAD,CACEoB,SAAU5B,EAAM4B,e,QChCTqH,G,MAZ2B,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,eAAgBC,EAAW,EAAXA,MACzD3H,EAAU4H,uBAAY,WACxBF,EAAeC,KAChB,CAACD,EAAgBC,IAEpB,OACI,6BACI,wBAAQ3H,QAASA,EAAjB,SAA2ByH,QCYxBI,G,MAnBmB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChC,EAAqC5H,mBAAS,GAA9C,mBAAM6H,EAAN,KAAmBL,EAAnB,KAEA,OACI,sBAAK7H,UAAU,OAAf,UACI,oBAAIA,UAAU,MAAd,SACKiI,EAASpG,KAAI,SAACsG,EAAML,GAAP,OACV,cAAC,EAAD,CAEIF,MAAOO,EAAKzJ,MAAM0J,UAAU7G,KAC5BuG,MAAOA,EACPD,eAAgBA,GAHXC,QAMhBG,EAASC,QCJPG,G,MAXiB,SAAC,GAAgB,IAAfJ,EAAc,EAAdA,SAE9B,OACI,qBAAKjI,UAAU,MAAf,SACI,qBAAKA,UAAU,OAAf,SAAuBiI,Q,4CCA7BK,G,MAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,gBAAiBF,EAAMG,QAAQC,WAAWC,OAE9CC,OAAQ,CACJC,QAAS,eA6EFC,EAzCQ,SAACtK,GACpB,MAAyB2B,mBAAS3B,EAAMuK,OAAxC,mBAAMA,EAAN,KACMC,GADN,KACgBZ,KAGhB,OACI,qBAAKrI,MAAO,CAACkJ,UAAW,IAAKC,SAAU,QAAvC,SACKH,EAAMpH,KAAI,SAACsG,EAAML,GAAP,OACP,cAACuB,EAAA,EAAD,CAAMrJ,UAAWkJ,EAAQT,KAAzB,SAEI,cAACa,EAAA,EAAD,CAAUC,WAAW,aAArB,SACI,cAACC,EAAA,EAAD,CAAcC,QAAStB,OAFtBL,S,mCCxDnBQ,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCkB,OAAQ,CACJC,OAAQnB,EAAMoB,QAAQ,IAE1BC,SAAU,CACNC,YAAatB,EAAMoB,QAAQ,IAE/BG,UAAW,CACP7J,SAAU,QAgCH8J,EAhBI,SAACtL,GAChB,IAAMwK,EAAUZ,IAKhB,OACI,cAAC2B,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNnK,UAAWkJ,EAAQQ,OACnBvJ,QARgB,SAACuB,GACrBhD,EAAM0L,kBAAkB1I,IAGxB,SAKI,cAAC2I,EAAA,EAAD,sBCkBGC,EA5BG,SAAC5L,GAWf,OACI,cAAC,IAAM6L,SAAP,UACI,uBAAMvK,UAAU,OAAOwK,YAAU,EAACC,aAAa,MAA/C,UACI,cAACC,EAAA,EAAD,CACIpD,GAAK,gBACLqD,MAAM,mDACN3K,UAAU,OACV2J,OAAO,SACPlI,SAbS,SAACC,GACtBhD,EAAMkM,aAAalJ,EAAEC,OAAOH,UAcpB,cAAC,EAAD,CACI4I,kBAAmB,SAAC1I,GAAD,OArBL,SAACA,GAC3BhD,EAAMmM,cAAcnJ,GAoBkBoJ,CAAsBpJ,YCKrDqJ,EAnCE,SAACrM,GAEd,IAGIsM,EAHJ,EAAyB3K,mBAAS3B,EAAMuK,OAAxC,mBAAMA,EAAN,KAAagC,EAAb,KAEA,EAAyB5K,oBAAkB,GAA3C,mBAAO6K,EAAP,KAAcC,EAAd,KAiBA,OACI,cAAC,IAAMZ,SAAP,UACI,sBAAKvK,UAAU,OAAf,UACI,cAAC,EAAD,CACIiJ,MAASA,IAEb,cAAC,EAAD,CACI2B,aAtBS,SAACQ,GACtBJ,EAAUI,GAsBEP,cAlBU,WACtB,IAAMQ,EAAWpC,EACjBoC,EAASrE,KAAKgE,GACdC,EAASI,GAGTF,GAAUD,GACVpM,QAAQ0D,IAAI9D,EAAMuK,gBCAXqC,EA/BM,SAAC5M,GAClB,MAA4BA,EAAM0J,UAArBmD,GAAb,EAAOhK,KAAP,EAAagK,MAAMtC,EAAnB,EAAmBA,MAMnB,OACI,qBAAKjJ,UAAU,gBAAf,SACI,cAAC,EAAD,CAAK4H,MAAM,IAAX,SACI,sBAAK5H,UAAU,MAAf,UACA,qBAAKA,UAAU,QAAf,SACI,0BAEIA,UAAU,OACVwB,MAAO+J,EACP9J,SAbK,SAACC,GACtBhD,EAAM8M,aAAa9M,EAAM0J,UAAUd,GAAI5F,EAAEC,OAAOH,YAexC,qBAAKxB,UAAU,QAAf,SACI,cAAC,EAAD,CACIiJ,MAAOA,cC+ChBwC,EArCE,SAAC/M,GAGd,IADA,IAAIgN,EAAoC,IAAItG,MAAM1G,EAAMiN,cAChDrG,EAAI,EAAGA,EAAI5G,EAAMiN,aAAarG,IAClCoG,EAAgBpG,GAAK,CAACgC,GAAGhC,EAAE/D,KAAK7C,EAAMkI,WAAWtB,GAAGiG,KAAK,GAAGtC,MAAM,CAAC,KAEvE,MAAmC5I,mBAASqL,GAA5C,mBAAM9E,EAAN,KAAkBC,EAAlB,KAWM+E,EAAgBhF,EAAW/E,KAAI,SAACgK,GAClC,OACI,cAAC,EAAD,CACIzD,UAAWyD,EAEXL,aAAc,SAAClE,EAAIiE,GAAL,OAdD,SAACjE,EAAYiE,GAClC,IAAMO,EAAgBlF,EAAW/E,KAAI,SAACgK,GAClC,OAAOA,EAAEvE,KAAOA,EAAT,2BACGuE,GADH,IACMN,KAAKA,IACbM,KAEThF,EAAciF,GAQsBC,CAAiBzE,EAAIiE,KAD5CM,EAAEvE,OAOnB,OACI,8BACI,cAAC,EAAD,UACKsE,OCXFI,MApDf,SAActN,GAQZ,IAPA,IAAM+F,EAAYrB,SAAgC,MAClD,EAA8BA,WAAgD,MAA9E,mBAAOoB,EAAP,KAAgBkC,EAAhB,KAEM0B,EAAY1J,EAAM4B,SAASqG,gBAC3BgF,EAAejN,EAAM4B,SAASa,mBAChCyF,EAAsB,IAAIxB,MAAMuG,GAE5BrG,EAAI,EAAGA,EAAIqG,EAAcrG,IAC/BsB,EAAWtB,GAAK8C,EAAU9C,GAAG/D,KAe/B,OAZA6B,aAAgB,WACd,GAAIqB,EAAUK,QAAS,CACrB,IAAMsC,EAAY3C,EAAUK,QAAQuC,WAAW,MAE3CD,GACFV,EAAWU,MAKd,CAAC5C,IAGF,qBACEvE,MAAO,CACL0F,UAAW,UAFf,SAII,qBAAK3F,UAAU,UAAf,SACI,cAAC,EAAD,CACE4G,WAAYA,EACZ+E,aAAcA,S,gBCjCfM,EAAb,WAQE,aAAc,yBANPhK,UAAkB,IAAIpC,KAMhB,KALNF,QAAiB,IAAIE,KAKf,KAJNuB,cAAwB,EAIlB,KAHNwF,WAA0B,IAAIxB,MAAM8G,KAAK9K,eAGnC,KAFN+K,UAAY,CAACC,SAAU,EAAGxM,KAAM,GAGrCsM,KAAKjK,UAAUC,SAAS,IACxBgK,KAAKvM,QAAQuC,SAAS,IACtBgK,KAAK9K,cAAgB,EACrB8K,KAAKtF,WAAa,CAChB,CAACrF,KAAK,MAAO3B,KAAK,MAClB,CAAC2B,KAAK,MAAO3B,KAAK,MAClB,CAAC2B,KAAK,QAAS3B,KAAK,KACpB,CAAC2B,KAAK,MAAO3B,KAAK,MAClB,CAAC2B,KAAK,MAAO3B,KAAK,OAjBxB,gDAoBE,WACE,OAAOsM,KAAKjK,YArBhB,wBAwBE,WACE,OAAOiK,KAAKvM,UAzBhB,0BA4BE,SAAasC,GACXiK,KAAKjK,UAAYA,IA7BrB,wBAgCE,SAAWtC,GACTuM,KAAKvM,QAAUA,IAjCnB,8BAoCE,WACE,OAAOuM,KAAK9K,gBArChB,8BAwCE,SAAiBiL,GACfH,KAAK9K,cAAgBiL,IAzCzB,8BA4CE,SAAiBA,GACfH,KAAK9K,cAAgB8K,KAAK9K,cAAgBiL,EAC1CH,KAAKvM,QAAQG,WAAWoM,KAAKvM,QAAQI,aAAe,IACpDmM,KAAKvM,QAAU,IAAIE,KAAKqM,KAAKvM,WA/CjC,2BAkDE,WACE,OAAOuM,KAAKtF,aAnDhB,2BAsDE,cAtDF,0BA0DE,WACE,OAAOsF,KAAKC,YA3DhB,0BA8DE,gBA9DF,K,QCPqBG,E,WAInB,WAAYC,GAAyC,IAA1BC,EAAyB,uDAApB,IAAIC,eAAgB,yBAH5CF,QAG4C,OAF5CC,QAE4C,EAClDN,KAAKK,GAAKA,EACVL,KAAKM,GAAKA,EACVD,EAAGG,UAAYR,KAAKS,QAAQC,KAAKV,MACjCK,EAAGM,OAASX,KAAKY,KAAKF,KAAKV,MAC3BK,EAAGQ,QAAUb,KAAKc,MAAMJ,KAAKV,MAC7BK,EAAGU,QAAUf,KAAKgB,MAAMN,KAAKV,M,sCAG/B,SAAG3K,EAAa4L,GACdjB,KAAKM,GAAGY,GAAG7L,EAAM4L,K,iBAGnB,SAAI5L,EAAa4L,GACfjB,KAAKM,GAAGa,eAAe9L,EAAM4L,K,kBAG/B,WACEjB,KAAKM,GAAGc,KAAK,a,mBAGf,WACEpB,KAAKM,GAAGc,KAAK,gB,mBAGf,SAAM5L,GACJ5C,QAAQ0D,IAAI,oBAAqBd,K,kBAGnC,SAAK6L,GACHrB,KAAKK,GAAGiB,KAAKD,K,qBAGf,SAAQ7L,GACN,IACEwK,KAAKM,GAAGc,KAAK,UAAW5L,GAExB,MAAO+L,GACPvB,KAAKM,GAAGc,KAAK,QAASG,GACtB3O,QAAQ0D,IAAI3C,OAAO6N,WAAa,KAAMD,Q,KC/B7BE,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCARtN,GAAW,IAAI2L,EAGjBmC,GAAS,IAAI9B,EADR,IAAI+B,UAAU,2BAEvBD,GAAOhB,GAAG,WACV,SAAwB1L,GACtB,IAAIiL,EAAU2B,KAAKC,MAAM7M,EAAE6L,MAC3BzO,QAAQ0D,IAAImK,MAId6B,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,CAAMpO,SAAUA,KAChB,cAAC,EAAD,CAAMA,SAAUA,KAChB,wBAAQH,QAAS,WAEf,IACIwO,EAAWL,KAAKM,UADN,CAACC,YAAY,OAAQlC,QAAQ,WAE3C7N,QAAQ0D,IAAImM,GACZP,GAAOd,KAAKqB,IALd,6BAUFjM,SAASoM,eAAe,SAM1BnB,O","file":"static/js/main.2f5be34d.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./DisplayTime.css\"\r\nimport { useTimer } from \"react-timer-hook\"; //npm install react-timer-hook が必要\r\n\r\ntype TimeFormat = {\r\n  seconds: number;\r\n  minutes: number;\r\n  hours: number;\r\n}\r\n\r\ntype Props = {\r\n  endTime: TimeFormat;\r\n}\r\n\r\n/*\r\n * 引数は上のTimeFormatのように{seconds, minutes, hours}の３つを与える．\r\n * 現在時刻から引数の時間分足した値をタイマーセット時間としてスタートする．（終了時刻を与えてタイマー動かした方がいい？）\r\n * 引数propsの内容が変わるか，切り替えボタンが押されたときにタイマーがリスタートされる\r\n */\r\nfunction DisplayTime( props: Props, { expiryTimestamp }: { expiryTimestamp: number } ) {\r\n\r\n  const {\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    days,\r\n    isRunning,\r\n    start,\r\n    pause,\r\n    resume,\r\n    restart,\r\n  } = useTimer({\r\n    expiryTimestamp,\r\n    onExpire: () => console.warn(\"onExpire called\"),\r\n  });\r\n\r\n  useEffect(()=>{\r\n    // タイマーをセットする部分\r\n    const sec = props.endTime.hours*3600 + props.endTime.minutes*60 + props.endTime.seconds\r\n    const time = new Date();\r\n    time.setSeconds(time.getSeconds() + sec);\r\n    restart(time as unknown as number);\r\n  }, [props.endTime]); //propsが更新されたら新しくタイマーがスタートする\r\n\r\n  return (\r\n    <div /*style={{ textAlign: \"center\" }}*/ className=\"flex\">\r\n      <div style={{ fontSize: \"500%\" }}>\r\n        <span>{hours}</span>:<span>{minutes}</span>:<span>{seconds}</span>\r\n      </div>\r\n      <button className=\"button\"\r\n        onClick={()=> {\r\n          // タイマーをセットする部分\r\n          const sec = props.endTime.hours*3600 + props.endTime.minutes*60 + props.endTime.seconds\r\n          const time = new Date();\r\n          time.setSeconds(time.getSeconds() + sec);\r\n          restart(time as unknown as number);\r\n        }}\r\n      >\r\n        切替\r\n      </button>\r\n    </div>\r\n  );  \r\n\r\n}\r\n\r\nexport default DisplayTime;","import React, { useEffect, useState } from \"react\";\r\nimport { TimeInfo } from \"../TimeInfo\";\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\n\r\nfunction SettingContents(props: Props) {\r\n\r\n  const [startHour, setStartHour] = useState(props.timeInfo.getStartTime().getHours());\r\n  const [startMin, setStartMin] = useState(props.timeInfo.getStartTime().getMinutes());\r\n  const [endHour, setEndHour] = useState(props.timeInfo.getEndTime().getHours());\r\n  const [endMin, setEndMin] = useState(props.timeInfo.getEndTime().getMinutes());\r\n  const [numPresenters, setNumPresenters] = useState(props.timeInfo.getNumPresenters());\r\n  \r\n\r\n  // useEffect(()=>{\r\n  //   setStartHour(props.timeInfo.getStartTime().getHours());\r\n  //   setStartMin(props.timeInfo.getStartTime().getMinutes());\r\n  //   setEndHour(props.timeInfo.getEndTime().getHours());\r\n  //   setEndMin(props.timeInfo.getEndTime().getMinutes());\r\n  //   setNumPresenters(props.timeInfo.getNumPresenters());\r\n  //   console.log('useEffect')\r\n  // }, [numPresenters])\r\n\r\n  const handleStartTime = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    var [h, min] = e.target.value.split(':').map(Number);\r\n\r\n    //propsの更新\r\n    var startTime = new Date();\r\n    startTime.setHours(h);\r\n    startTime.setMinutes(min);\r\n    props.timeInfo.setStartTime(startTime); \r\n\r\n    setStartHour(h);\r\n    setStartMin(min);\r\n  }\r\n\r\n  const handleEndTime = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    var [h, min] = e.target.value.split(':').map(Number);\r\n\r\n    //propsの更新\r\n    var endTime = new Date();\r\n    endTime.setHours(h);\r\n    endTime.setMinutes(min);\r\n    props.timeInfo.setEndTime(endTime); \r\n\r\n    setEndHour(h);\r\n    setEndMin(min);\r\n  }\r\n\r\n  const handleNumPresenters = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    var n = Number(e.target.value);\r\n    props.timeInfo.setNumPresenters(n);\r\n\r\n    setNumPresenters(n);\r\n  }\r\n\r\n\r\n\r\n  const handlePresenter = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    var name = e.target.value;\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <p>設定項目</p>\r\n      <p>開始時間</p>\r\n      <input type=\"time\" name=\"startTime\" value={startHour+':'+startMin} onChange={handleStartTime}></input>\r\n      <p>終了時間</p>\r\n      <input type=\"time\" name=\"endTime\" value={endHour+':'+endMin} onChange={handleEndTime}></input>\r\n      <p>発表人数{numPresenters}人</p>\r\n      <input type=\"number\" name=\"numPresenters\" value={numPresenters} min=\"1\" onChange={handleNumPresenters}></input>\r\n      <button onClick={()=>{\r\n        props.timeInfo.addNumPresenters(1);\r\n        console.log(props.timeInfo.numPresenters)\r\n        setNumPresenters(props.timeInfo.getNumPresenters());\r\n      }}>人数+</button>\r\n      <input type=\"text\" className=\"input\" name=\"presenter\" onChange={handlePresenter}></input>\r\n      <button onClick={()=>{\r\n        console.log('CLONE')\r\n        var node = document.getElementsByClassName(\"input\")[0];\r\n        node?.after(node.cloneNode());\r\n      }}>CLONE</button>\r\n      <button onClick={()=>{\r\n        console.log('DELETE')\r\n        var nodes = document.getElementsByClassName(\"input\");\r\n        var node = nodes[nodes.length-1]\r\n        node.remove();\r\n      }}>DELETE</button>\r\n      <p>各発表時間</p>\r\n      <input type=\"number\"></input>\r\n      <p>休憩時間</p>\r\n      <input type=\"number\"></input>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingContents;","import React, { useEffect } from \"react\";\r\nimport SettingContents from \"./SettingContents\";\r\nimport { TimeInfo } from \"../TimeInfo\";\r\nimport Modal from \"react-modal\"; //npm install --save react-modal @types/react-modal でインストール\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\nfunction SettingModal(props: Props){\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={()=>{\r\n          setIsOpen(true)\r\n        }}  \r\n      >\r\n        設定\r\n      </button>\r\n      <Modal isOpen={modalIsOpen}>\r\n        <button\r\n          onClick={()=>{\r\n            setIsOpen(false)\r\n          }}  \r\n        >\r\n          閉じる\r\n        </button>\r\n        <SettingContents \r\n          timeInfo={props.timeInfo}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingModal;","import * as React from 'react';\r\nimport { TimeInfo } from \"../TimeInfo\";\r\n\r\nconst beginposition = 40;\r\nconst endposition = 920;\r\nconst vertical_bar_y_begin = 30;\r\nconst vertical_bar_y_end = 110;\r\nconst nowtime_bar_y_begin = 50;\r\nconst nowtime_bar_y_end = 90;\r\nconst nowtime_bar_x_diff = 20;\r\nvar time:Date;\r\nconst bar_y_position = 70;\r\nconst timetext_y_position = 140;\r\nconst nametext_y_position = 45;\r\nconst nowtimetext_y_position = 110;\r\nconst colors:string[] = ['red', 'blue', 'black', 'green', 'orange'];\r\nvar checksetStartTime:any = null;\r\nvar checksetEndTime:any = null;\r\nvar checksetPresenters:any = null;\r\nvar checkdraw:any = null;\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\nfunction calcBarPosition(starttime:number, endtime:number, times:number[]) {\r\n  var barposition:number[] = new Array(times.length - 1);\r\n  var timelength = endtime - starttime;\r\n  var barlength = endposition - beginposition;\r\n  var sum;\r\n\r\n  for (var i = 0; i < times.length - 1; i++) {\r\n    sum = 0;\r\n    for (var j = 0; j <= i; j++) {\r\n      sum += times[j];\r\n    }\r\n    barposition[i] = beginposition + (barlength * (sum / timelength));\r\n  }\r\n\r\n  return barposition;\r\n}\r\n\r\nfunction calcNowtimePosition(timestr:string, starttime:number, endtime:number) {\r\n  var timelength = endtime - starttime;\r\n  var barlength = endposition - beginposition;\r\n  var second = hourminsecTosec(timestr);\r\n\r\n  return (beginposition + (barlength * ((second - starttime) / timelength)));\r\n}\r\n\r\nfunction secTohourmin(seconds:number) {\r\n  var hour:number = Math.floor(seconds / 3600);\r\n  var min:number = Math.floor((seconds - (hour * 3600)) / 60);\r\n  var hourstr:string;\r\n  var minstr:string;\r\n\r\n  if (hour < 10) {\r\n    hourstr = '0' + String(hour);\r\n  }\r\n  else {\r\n    hourstr = String(hour);\r\n  }\r\n  if (min < 10) {\r\n    minstr = '0' + String(min);\r\n  }\r\n  else {\r\n    minstr = String(min);\r\n  }\r\n\r\n  return (hourstr + ':' + minstr);\r\n}\r\n\r\nfunction hourminsecTosec(time:string) {\r\n  var timestrs = time.split(':');\r\n  var hour:number = Number(timestrs[0]);\r\n  var min:number = Number(timestrs[1]);\r\n  var second:number = Number(timestrs[2]);\r\n\r\n  return ((hour * 3600) + (min * 60) + second);\r\n}\r\n\r\nfunction draw(context:any, canvasRef:any, starttime:number, endtime:number, names:string[], times:number[]) {\r\n  time = new Date();\r\n  if (context) {\r\n    if (canvasRef.current) context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    var barposition = calcBarPosition(starttime, endtime, times);\r\n    context.globalAlpha = 1.0\r\n    context.strokeStyle = 'black';\r\n    context.textAlign = 'center';\r\n    // begin time\r\n    context.beginPath();\r\n    context.moveTo(beginposition, vertical_bar_y_begin);\r\n    context.lineTo(beginposition, vertical_bar_y_end);\r\n    context.stroke();\r\n    context.font = '25px serif';\r\n    context.fillText(names[0], (beginposition + barposition[0]) / 2, nametext_y_position)\r\n    context.font = '30px serif';\r\n    context.fillText(secTohourmin(starttime), beginposition, timetext_y_position)\r\n  \r\n    // end time\r\n    context.beginPath();\r\n    context.moveTo(endposition, vertical_bar_y_begin);\r\n    context.lineTo(endposition, vertical_bar_y_end);\r\n    context.stroke();\r\n    context.font = '25px serif';\r\n    context.fillText(names[names.length - 1], (barposition[barposition.length - 1] + endposition) / 2, nametext_y_position)\r\n    context.font = '30px serif';\r\n    context.fillText(secTohourmin(endtime), endposition, timetext_y_position)\r\n  \r\n    // change time\r\n    for (var i = 0; i < barposition.length + 1; i++) {\r\n      context.strokeStyle = 'black';\r\n      context.beginPath();\r\n      context.moveTo(barposition[i], vertical_bar_y_begin);\r\n      context.lineTo(barposition[i], vertical_bar_y_end);\r\n      context.stroke();\r\n      context.strokeStyle = colors[i];\r\n      context.beginPath();\r\n      if (i == 0) {\r\n        context.moveTo(beginposition, bar_y_position);\r\n      }\r\n      else {\r\n        context.moveTo(barposition[i - 1], bar_y_position);\r\n      }\r\n      if (i < barposition.length - 1) {\r\n        context.lineTo(barposition[i], bar_y_position);\r\n      }\r\n      else {\r\n        context.lineTo(endposition, bar_y_position);\r\n      }\r\n      context.stroke();\r\n      if (i < barposition.length) {\r\n        var sum = 0;\r\n        for (var j = 0; j <= i; j++) sum += times[j];\r\n        if (i > 0) {\r\n          context.font = '25px serif';\r\n          context.fillText(names[i], (barposition[i - 1] + barposition[i]) / 2, nametext_y_position)\r\n        }\r\n        context.font = '30px serif';\r\n        context.fillText(secTohourmin(starttime + sum), barposition[i], timetext_y_position)\r\n      }\r\n    }\r\n  \r\n    // now time\r\n    var timestr = time.toLocaleTimeString([], {hour12:false, hour:'2-digit', minute:'2-digit', second:'2-digit'});\r\n    var nowtimeposition = calcNowtimePosition(timestr, starttime, endtime);\r\n    context.strokeStyle = 'black';\r\n    context.beginPath();\r\n    context.moveTo(nowtimeposition - nowtime_bar_x_diff, nowtime_bar_y_begin);\r\n    context.lineTo(nowtimeposition, bar_y_position);\r\n    context.stroke();\r\n    context.beginPath();\r\n    context.moveTo(nowtimeposition - nowtime_bar_x_diff, nowtime_bar_y_end);\r\n    context.lineTo(nowtimeposition, bar_y_position);\r\n    context.stroke();\r\n    context.font = '20px serif';\r\n    context.fillText(timestr, nowtimeposition, nowtimetext_y_position);\r\n  }\r\n}\r\n\r\nfunction TimeBar(props: Props) {\r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(null);\r\n  const [startTime, setStartTime] = React.useState(props.timeInfo.getStartTime());\r\n  const [endTime, setEndTime] = React.useState(props.timeInfo.getEndTime());\r\n  const [presenters, setPresenters] = React.useState(props.timeInfo.getPresenters());\r\n  var starttime:number;\r\n  var endtime:number;\r\n  var names:string[] = [];\r\n  var times:number[] = [];\r\n\r\n  if (checksetStartTime) clearInterval(checksetStartTime);\r\n  checksetStartTime = setInterval(function(){setStartTime(props.timeInfo.getStartTime())}, 100);\r\n  starttime = hourminsecTosec(startTime.toLocaleTimeString([], {hour12:false, hour:'2-digit', minute:'2-digit', second:'2-digit'}));\r\n\r\n  if (checksetEndTime) clearInterval(checksetEndTime);\r\n  checksetEndTime = setInterval(function(){setEndTime(props.timeInfo.getEndTime())}, 100);\r\n  endtime = hourminsecTosec(endTime.toLocaleTimeString([], {hour12:false, hour:'2-digit', minute:'2-digit', second:'2-digit'}));\r\n\r\n  if (checksetPresenters) clearInterval(checksetPresenters);\r\n  checksetPresenters = setInterval(function(){setPresenters(props.timeInfo.getPresenters())}, 100);\r\n  for (var i = 0; i < presenters.length; i++) {\r\n    names.push(presenters[i].name);\r\n    times.push(presenters[i].time);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      canvasRef.current.style.position = 'absolute';\r\n      canvasRef.current.style.left = '280px';\r\n      canvasRef.current.style.top = '10px';\r\n      if (checkdraw) clearInterval(checkdraw);\r\n      checkdraw = setInterval(function(){draw(context, canvasRef, starttime, endtime, names, times)}, 10);\r\n      const renderCtx = canvasRef.current.getContext('2d');\r\n\r\n      if (renderCtx) {\r\n        setContext(renderCtx);\r\n      }\r\n    }\r\n    draw(context, canvasRef, starttime, endtime, names, times);\r\n  }, [context, startTime, endTime, presenters]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n      }}>\r\n      <canvas\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        width={960}\r\n        height={150}\r\n        style={{\r\n          border: '2px solid #000',\r\n          marginTop: 10,\r\n        }}\r\n      ></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeBar;","import { render } from '@testing-library/react';\r\nimport { time } from 'console';\r\nimport * as React from 'react';\r\n\r\nimport DisplayTime from './DisplayTime';\r\nimport SettingModal from './SettingModal';\r\n\r\nimport TimeBar from './TimeBar';\r\n\r\n\r\nimport { TimeInfo } from '../TimeInfo';\r\n\r\ntype Props = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\nfunction Time(props: Props) {\r\n  \r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      const renderCtx = canvasRef.current.getContext('2d');\r\n\r\n      if (renderCtx) {\r\n        setContext(renderCtx);\r\n      }\r\n    }\r\n\r\n    // if (context) context.fillRect(5, 5, 100, 100);\r\n  }, [context]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n      }}>\r\n      <canvas\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        width={1000}\r\n        height={300}\r\n        style={{\r\n          border: '2px solid #000',\r\n          marginTop: 10,\r\n        }}\r\n      ></canvas>\r\n      <TimeBar timeInfo={props.timeInfo}/>\r\n      <DisplayTime \r\n        endTime={{seconds:0, minutes:10, hours:0}}\r\n      />\r\n      <SettingModal \r\n        timeInfo={props.timeInfo}\r\n      />\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Time;","import React, { useCallback } from \"react\";\r\nimport \"./TabTitle.css\"\r\n\r\ntype TabTitleProps = {\r\n    title: string\r\n    index: number\r\n    setSelectedTab: (index: number) => void\r\n}\r\n\r\nconst TabTitle: React.FC<TabTitleProps> = ({title, setSelectedTab, index}) => {\r\n    const onClick = useCallback(() => {\r\n        setSelectedTab(index)\r\n    }, [setSelectedTab, index])\r\n    \r\n    return(\r\n        <li>\r\n            <button onClick={onClick}>{title}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TabTitle","import React, {ReactElement, useState} from \"react\";\r\n//import Tab from \"./Tab\";\r\nimport TabTitle from \"./TabTitle\";\r\nimport \"./Tabs.css\"\r\n\r\ntype TabsProps = {\r\n    children: ReactElement[]\r\n}\r\n\r\nconst Tabs: React.FC<TabsProps> = ({children}) => {\r\n    const[selectedTab, setSelectedTab] = useState(0)\r\n\r\n    return(\r\n        <div className=\"tabs\">\r\n            <ul className=\"nav\">\r\n                {children.map((item, index) => (\r\n                    <TabTitle \r\n                        key={index}\r\n                        title={item.props.presenter.name}\r\n                        index={index}\r\n                        setSelectedTab={setSelectedTab}/>\r\n                ))}\r\n            </ul>\r\n            {children[selectedTab]}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tabs","import React from \"react\";\r\nimport \"./Tab.css\"\r\nimport {TodayPresenter} from \"../TodayPresenter\"\r\n\r\ntype TabProps = {\r\n    title: string;\r\n}\r\n\r\nconst Tab: React.FC<TabProps> = ({children}) => {\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div className=\"Memo\">{children}</div>\r\n            {/*<div className=\"Memo\"></div>*/}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Tab\r\n","  \r\nimport React, {useState, Children, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport \"./AlignItemsList.css\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n}));\r\n/*\r\nfunction AlignItemsList() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div style={{maxHeight: 200, overflow: 'auto'}}>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText primary=\"Hello World\"/>\r\n                </ListItem>\r\n            </List>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText primary=\"Hello World\"/>\r\n                </ListItem>\r\n            </List>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText primary=\"Hello World\"/>\r\n                </ListItem>\r\n            </List>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText primary=\"Hello World\"/>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n*/\r\ntype AlignItemsListProps = {\r\n    chats: string[]\r\n}\r\n\r\nconst AlignItemsList = (props: AlignItemsListProps) => {\r\n    const[chats, setChats] = useState(props.chats)\r\n    const classes = useStyles();\r\n    //const chats = props.chats\r\n\r\n    return (\r\n        <div style={{maxHeight: 200, overflow: 'auto'}}>\r\n            {chats.map((item, index) => (\r\n                <List className={classes.root}\r\n                    key={index}>\r\n                    <ListItem alignItems=\"flex-start\">\r\n                        <ListItemText primary={item}/>\r\n                    </ListItem>\r\n                    {/*<Divider variant=\"inset\" component=\"li\"/>*/}\r\n                </List>\r\n            ))}\r\n            {/*\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText primary=\"Hello World\"/>\r\n                </ListItem>\r\n            </List>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText primary=\"Hello World\"/>\r\n                </ListItem>\r\n            </List>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText primary=\"Hello World\"/>\r\n                </ListItem>\r\n            </List>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemText primary=\"Hello World\"/>\r\n                </ListItem>\r\n            </List>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlignItemsList;","import React from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    leftIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    iconSmall: {\r\n        fontSize: 14,\r\n    },\r\n}));\r\n/*\r\nfunction SendButton() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n            <Icon>send</Icon>\r\n        </Button>\r\n    );\r\n}*/\r\ntype SendButtonProps = {\r\n    onSendButtonClick:(e: any) => void;\r\n}\r\n\r\nconst SendButton = (props:SendButtonProps) => {\r\n    const classes = useStyles();\r\n\r\n    const handleSendClick = (e: any) => {\r\n        props.onSendButtonClick(e);\r\n    }\r\n    return (\r\n        <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            className={classes.button}\r\n            onClick={handleSendClick}>\r\n            <Icon>send</Icon>\r\n        </Button>\r\n    );\r\n}\r\nexport default SendButton;","import React, {Component} from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./TextInput.css\"\r\nimport SendButton from './SendButton';\r\nimport { isPropertySignature } from \"typescript\";\r\n/*\r\nclass TextInput extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <form className=\"wrap\" noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        id = \"standard-text\"\r\n                        label=\"メッセージを入力\"\r\n                        className=\"text\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <SendButtons />\r\n                </form>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n*/\r\n\r\ntype TextInputProps = {\r\n    //chat: string;\r\n    onChatChange: (chat: string) => void;\r\n    onButtonClick: (e: any) => void;\r\n};\r\n\r\nconst TextInput = (props:TextInputProps) => {\r\n    const handleSendButtonClick = (e: any) => {\r\n        props.onButtonClick(e)\r\n        //console.log(e)\r\n    }\r\n\r\n    const handleChatChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.onChatChange(e.target.value);\r\n        //console.log(e.target.value)\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <form className=\"wrap\" noValidate autoComplete=\"off\">\r\n                <TextField\r\n                    id = \"standard-text\"\r\n                    label=\"メッセージを入力\"\r\n                    className=\"text\"\r\n                    margin=\"normal\"\r\n                    onChange={handleChatChange}\r\n                />\r\n                <SendButton \r\n                    onSendButtonClick={(e) => handleSendButtonClick(e)}/>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TextInput;","import React, {useState, Component, useEffect} from \"react\";\r\nimport { isPropertySignature } from \"typescript\";\r\n\r\n//import {connect} from 'react-redux'\r\n\r\nimport AlignItemsList from \"./AlignItemsList\";\r\nimport TextInput from \"./TextInput\";\r\n\r\n/*class ChatArea extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"Chat\">\r\n                    <AlignItemsList/>\r\n                    <TextInput/>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}*/\r\ntype ChatAreaProps = {\r\n    chats: string[];\r\n}\r\n\r\nconst ChatArea = (props:ChatAreaProps) => {\r\n    //const chats = props.chats\r\n    const[chats, setChats] = useState(props.chats);\r\n    //boolean型のstateを作成\r\n    const [update,setUpdata]=useState<boolean>(false)\r\n    let newchat: string;\r\n    const handleChatChange = (chat: string) => {\r\n        newchat = chat\r\n        //console.log(newchat)\r\n    }\r\n\r\n    const handleButtonClick = () => {\r\n        const newChats = chats\r\n        newChats.push(newchat)\r\n        setChats(newChats)\r\n\r\n        //レンダリングしたい場所でこれを差し込むだけ\r\n        setUpdata(update?false:true)\r\n        console.log(props.chats)\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"Chat\">\r\n                <AlignItemsList\r\n                    chats = {chats}\r\n                    />\r\n                <TextInput\r\n                    onChatChange={handleChatChange}\r\n                    onButtonClick={handleButtonClick}/>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ChatArea","import React from \"react\";\r\nimport { TodayPresenter } from \"./TodayPresenter\";\r\nimport Tab from \"./Tabs/Tab\"\r\nimport \"./PresenterTab.css\"\r\nimport ChatArea from \"./Tabs/Chat/ChatArea\";\r\n\r\ntype PresenterTabProps = {\r\n    presenter: TodayPresenter;\r\n    onMemoChange: (id: number, memo: string) => void;\r\n};\r\n\r\nconst PresenterTab = (props:PresenterTabProps) => {\r\n    const {name, memo, chats} = props.presenter;\r\n\r\n    const handleMemoChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.onMemoChange(props.presenter.id, e.target.value);\r\n    };\r\n\r\n    return(\r\n        <div className=\"presenter-tab\">\r\n            <Tab title=\"a\">\r\n                <div className=\"box\">\r\n                <div className=\"field\">\r\n                    <textarea\r\n                        //type=\"text\"\r\n                        className=\"memo\"\r\n                        value={memo}\r\n                        onChange={handleMemoChange}\r\n                    />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <ChatArea\r\n                        chats={chats}/*value={chats}*/\r\n                    />\r\n                </div>\r\n                </div>\r\n            </Tab>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PresenterTab;\r\n","import React, {useState} from \"react\";\r\nimport Tabs from \"./Tabs/Tabs\"\r\nimport Tab from \"./Tabs/Tab\"\r\nimport Memo from \"./Memo\";\r\nimport { TodayPresenter } from \"./TodayPresenter\";\r\nimport PresenterTab from \"./PresenterTab\"\r\n\r\nimport {TimeInfo} from \"../TimeInfo\";\r\n//function SampleMemo() {\r\n\r\nconst dummyPresenters: TodayPresenter[] = [\r\n    {\r\n        id: 1,\r\n        name: \"A\",\r\n        memo: \"\",\r\n        chats: [\"こんにちは！a\", \"aさん\", \"遊びましょう！\", \"今度また～\"],\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"B\",\r\n        memo: \"\",\r\n        chats: [\"こんにちは！b\"],\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"C\",\r\n        memo: \"\",\r\n        chats: [\"\"],\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"D\",\r\n        memo: \"\",\r\n        chats: [\"\"],\r\n    },\r\n];\r\n\r\ntype MemoAreaProps = {\r\n    presenters: string[];\r\n    presenterNum: number;\r\n}\r\n\r\nconst MemoArea = (props: MemoAreaProps) => {\r\n    //const[presenters, setPresenters] = useState(dummyPresenters);\r\n    var dummypresenters: TodayPresenter[] = new Array(props.presenterNum)\r\n    for(var i = 0; i < props.presenterNum;i++) {\r\n        dummypresenters[i] = {id:i,name:props.presenters[i],memo:\"\",chats:[\"\"]}\r\n    }\r\n    const[presenters, setPresenters] = useState(dummypresenters)\r\n    \r\n    const handleMemoChange = (id: number, memo: string) => {\r\n        const newPresenters = presenters.map((p) => {\r\n            return p.id === id\r\n                ? {...p, memo:memo}\r\n                :p;\r\n        });\r\n        setPresenters(newPresenters);\r\n    };\r\n\r\n    const presenterTabs = presenters.map((p) => {\r\n        return(\r\n            <PresenterTab\r\n                presenter={p}\r\n                key={p.id}\r\n                onMemoChange={(id, memo) => handleMemoChange(id, memo)}\r\n                //onMemoChange={(id, memo) => {}}\r\n            />\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div>\r\n            <Tabs>\r\n                {presenterTabs}\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MemoArea;","import { render } from '@testing-library/react';\r\nimport * as React from 'react';\r\n//import PrivateMemo from './PrivateMemo';\r\nimport MemoArea from './MemoArea';\r\nimport {TimeInfo} from '../TimeInfo'\r\n\r\ntype MemoProps = {\r\n  timeInfo: TimeInfo;\r\n}\r\n\r\nfunction Memo(props: MemoProps) {\r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(null);\r\n\r\n  const presenter = props.timeInfo.getPresenters()\r\n  const presenterNum = props.timeInfo.getNumPresenters()\r\n  var presenters:string[] = new Array(presenterNum)\r\n\r\n  for(var i = 0; i < presenterNum; i++) {\r\n    presenters[i] = presenter[i].name\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      const renderCtx = canvasRef.current.getContext('2d');\r\n\r\n      if (renderCtx) {\r\n        setContext(renderCtx);\r\n      }\r\n    }\r\n\r\n    // if (context) context.fillRect(5, 5, 100, 100);\r\n  }, [context]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n      }}>\r\n        <div className=\"content\">\r\n            <MemoArea\r\n              presenters={presenters}\r\n              presenterNum={presenterNum}/>\r\n            {/*<PrivateMemo/>*/}\r\n          </div>\r\n      {/*<canvas\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        width={1000}\r\n        height={500}\r\n        style={{\r\n          border: '2px solid #000',\r\n          marginTop: 10,\r\n        }}\r\n      >\r\n        \r\n      </canvas>*/}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Memo;","import internal from \"stream\";\r\n\r\ntype Presenter = {\r\n  name: string;\r\n  time: number;\r\n}\r\n\r\n\r\n\r\nexport class TimeInfo{\r\n\r\n  public startTime: Date = new Date();\r\n  public endTime: Date  = new Date();\r\n  public numPresenters: number = 1;\r\n  public presenters: Presenter[] = new Array(this.numPresenters);\r\n  public breakTime = {interbal: 1, time: 0};\r\n\r\n  constructor(){\r\n    this.startTime.setHours(14);\r\n    this.endTime.setHours(16);\r\n    this.numPresenters = 5;\r\n    this.presenters = [\r\n      {name:'abc', time:1500},\r\n      {name:'def', time:1500},\r\n      {name:'break', time:600},\r\n      {name:'ghi', time:1500},\r\n      {name:'jkl', time:1500}];\r\n  }\r\n\r\n  getStartTime(){\r\n    return this.startTime;\r\n  }\r\n\r\n  getEndTime(){\r\n    return this.endTime;\r\n  }\r\n  \r\n  setStartTime(startTime: Date){\r\n    this.startTime = startTime;\r\n  }\r\n\r\n  setEndTime(endTime: Date){\r\n    this.endTime = endTime;\r\n  }\r\n\r\n  getNumPresenters(){\r\n    return this.numPresenters;\r\n  }\r\n\r\n  setNumPresenters(num: number){\r\n    this.numPresenters = num;\r\n  }\r\n\r\n  addNumPresenters(num: number){\r\n    this.numPresenters = this.numPresenters + num;\r\n    this.endTime.setSeconds(this.endTime.getSeconds() + 60);\r\n    this.endTime = new Date(this.endTime);\r\n  }\r\n\r\n  getPresenters(){\r\n    return this.presenters;\r\n  }\r\n\r\n  setPresenters(){\r\n\r\n  }\r\n\r\n  getBreakTime(){\r\n    return this.breakTime;\r\n  }\r\n\r\n  setBreakTime(){\r\n\r\n  }\r\n\r\n}","import { EventEmitter } from \"events\";\r\n\r\nexport default class Socket {\r\n  private ws;\r\n  private ee;\r\n\r\n  constructor(ws: WebSocket, ee = new EventEmitter()) {\r\n    this.ws = ws;\r\n    this.ee = ee;\r\n    ws.onmessage = this.message.bind(this);\r\n    ws.onopen = this.open.bind(this);\r\n    ws.onclose = this.close.bind(this);\r\n    ws.onerror = this.error.bind(this);\r\n  }\r\n\r\n  on(name:string, fn:any) {\r\n    this.ee.on(name, fn);\r\n  }\r\n\r\n  off(name:string, fn:any) {\r\n    this.ee.removeListener(name, fn);\r\n  }\r\n\r\n  open() {\r\n    this.ee.emit(\"connect\");\r\n  }\r\n\r\n  close() {\r\n    this.ee.emit(\"disconnect\");\r\n  }\r\n\r\n  error(e:any) {\r\n    console.log(\"websocket error: \", e);\r\n  }\r\n\r\n  emit(data:any) {\r\n    this.ws.send(data)\r\n  }\r\n\r\n  message(e:any) {\r\n    try {\r\n      this.ee.emit(\"message\", e);\r\n\r\n    } catch (err) {\r\n      this.ee.emit(\"error\", err);\r\n      console.log(Date().toString() + \": \", err);\r\n    }\r\n  }\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Time from './Time/Time';\r\nimport Memo from './Memo/Memo';\r\nimport { TimeInfo } from './TimeInfo';\r\nimport Socket from './WebSocket';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst timeInfo = new TimeInfo();\r\n\r\nlet ws = new WebSocket(\"ws://localhost:1323/ws\");\r\nlet socket = new Socket(ws);\r\nsocket.on(\"message\", receiveMessage);\r\nfunction receiveMessage(e:any){\r\n  let message = JSON.parse(e.data);\r\n  console.log(message);\r\n  \r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Time timeInfo={timeInfo}/>\r\n    <Memo timeInfo={timeInfo}/>\r\n    <button onClick={()=>{\r\n      // var message = \"React!\";\r\n      var message = {messagetype:\"memo\", message:\"React!\"};\r\n      var mes_json = JSON.stringify(message);\r\n      console.log(mes_json);\r\n      socket.emit(mes_json);\r\n    }}>\r\n      送信\r\n    </button>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}